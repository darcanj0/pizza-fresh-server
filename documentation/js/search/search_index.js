var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.234,1,2.495]],["body/controllers/AppController.html",[0,1.871,1,3.782,2,1.442,3,0.213,4,0.186,5,0.186,6,3.616,7,0.455,8,1.683,9,4.691,10,4.224,11,5.51,12,1.367,13,0.021,14,3.215,15,4.171,16,5.481,17,4.171,18,0.56,19,4.224,20,1.297,21,1.109,22,0.524,23,0.897,24,6.084,25,1.297,26,0.454,27,0.803,28,2.993,29,2.307,30,1.109,31,3.616,32,3.568,33,3.616,34,4.224,35,0.213,36,0.198,37,1.521,38,1.521,39,2.158,40,4.224,41,1.798,42,3.616,43,0.849,44,4.224,45,4.224,46,1.297,47,4.224,48,0.015,49,0.015]],["title/modules/AppModule.html",[50,1.17,51,2.495]],["body/modules/AppModule.html",[1,3.848,2,1.666,3,0.179,4,0.156,5,0.156,13,0.02,26,0.491,27,0.675,32,3.814,33,3.039,35,0.179,36,0.167,48,0.013,49,0.013,50,1.58,51,5.08,52,1.511,53,2.076,54,3.039,55,3.039,56,3.039,57,4.12,58,4.12,59,4.12,60,2.767,61,4.12,62,4.12,63,4.12,64,2.339,65,1.702,66,1.702,67,3.55,68,2.492,69,2.665,70,3.55,71,3.55,72,3.55,73,3.55,74,3.55,75,3.55,76,3.55,77,3.55]],["title/injectables/AppService.html",[32,2.12,78,0.9]],["body/injectables/AppService.html",[3,0.235,4,0.205,5,0.205,7,0.503,8,1.796,9,5.004,13,0.02,17,4.45,18,0.62,20,1.436,21,1.227,22,0.58,23,0.992,25,1.436,26,0.33,27,0.889,32,3.429,35,0.235,36,0.219,42,5.004,43,1.383,46,1.436,48,0.016,49,0.016,78,1.456,79,1.99,80,4.002,81,5.847,82,4.675,83,5.004,84,4.002,85,4.002,86,4.675]],["title/controllers/AuthController.html",[0,1.234,87,2.495]],["body/controllers/AuthController.html",[0,1.199,2,1.199,3,0.177,4,0.154,5,0.154,7,0.378,8,1.488,12,1.568,13,0.02,18,0.642,20,1.488,21,1.271,22,0.601,23,1.028,25,1.836,26,0.477,27,0.668,28,3.028,29,1.918,30,0.922,35,0.177,36,0.165,37,1.265,38,1.265,39,2.474,46,1.488,48,0.013,49,0.013,87,3.343,88,3.006,89,2.06,90,3.512,91,3.686,92,4.146,93,3.006,94,4.107,95,3.512,96,4.844,97,2.157,98,4.844,99,3.686,100,3.512,101,1.947,102,3.512,103,3.512,104,4.146,105,3.512,106,3.512,107,2.06,108,2.06,109,2.06,110,2.841,111,2.06,112,2.06,113,1.199,114,2.841,115,2.424,116,3.251,117,3.006,118,2.225,119,3.006,120,3.006,121,3.006,122,2.225,123,3.512,124,2.673,125,3.512,126,3.512,127,3.512,128,3.512,129,3.512,130,2.673,131,3.512]],["title/modules/AuthModule.html",[50,1.17,57,2.29]],["body/modules/AuthModule.html",[2,1.799,3,0.2,4,0.175,5,0.175,13,0.021,26,0.484,27,0.757,35,0.2,36,0.187,48,0.014,49,0.014,50,1.707,52,1.694,53,2.243,57,4.51,60,2.862,64,2.527,65,1.908,66,1.908,68,2.693,69,2.879,87,4.079,113,1.359,116,3.944,117,3.407,132,3.407,133,3.407,134,3.981,135,3.224,136,3.981,137,3.407,138,2.747,139,2.335,140,2.335,141,3.981,142,3.981,143,2.335,144,3.029,145,2.522,146,3.981,147,3.981,148,3.029,149,3.981,150,3.981,151,3.981]],["title/injectables/AuthService.html",[78,0.9,116,2.12]],["body/injectables/AuthService.html",[3,0.139,4,0.121,5,0.121,7,0.298,8,1.254,13,0.021,18,0.643,20,1.254,21,1.072,22,0.602,23,0.867,25,0.849,26,0.422,27,0.526,35,0.139,36,0.13,38,1.471,41,2.066,46,0.849,48,0.011,49,0.011,78,1.017,79,1.177,91,3.107,93,3.495,94,3.791,97,1.756,99,2.104,101,1.641,116,2.394,118,1.752,119,2.367,120,2.367,121,2.367,138,1.908,152,2.367,153,0.965,154,3.623,155,4.155,156,2.327,157,2.085,158,1.412,159,2.039,160,6.19,161,2.765,162,2.085,163,2.765,164,1.622,165,1.51,166,1.622,167,1.744,168,3.959,169,3.38,170,2.394,171,3.623,172,2.23,173,2.847,174,2.394,175,3.623,176,2.394,177,3.107,178,2.085,179,1.842,180,2.085,181,2.765,182,3.35,183,1.412,184,2.367,185,2.104,186,1.957,187,1.908,188,2.367,189,1.842,190,1.471,191,4.083,192,4.083,193,4.083,194,2.765,195,2.818,196,1.177,197,2.765,198,1.908]],["title/classes/Category.html",[36,0.17,199,1.974]],["body/classes/Category.html",[3,0.235,4,0.205,5,0.205,7,0.503,13,0.02,18,0.886,22,0.829,23,1.49,35,0.235,36,0.219,43,1.175,48,0.016,49,0.016,153,1.381,167,1.859,178,3.259,179,2.878,180,3.259,199,3.193,200,1.293,201,4.002,202,4.235,203,4.675,204,2.106,205,4.675,206,4.675,207,4.675]],["title/controllers/CategoryController.html",[0,1.234,208,2.495]],["body/controllers/CategoryController.html",[0,0.954,2,0.954,3,0.141,4,0.123,5,0.123,7,0.301,8,1.264,12,1.859,13,0.02,14,2.127,18,0.761,20,1.655,21,1.414,22,0.668,23,1.143,25,1.764,26,0.423,27,0.531,28,3.28,29,1.526,30,0.734,35,0.141,36,0.131,37,1.006,38,1.006,39,2.933,43,1.307,46,1.764,48,0.011,49,0.011,89,1.639,101,2.562,107,2.413,108,1.639,109,1.639,110,2.413,111,1.639,112,1.639,113,0.954,114,2.413,130,2.127,167,1.978,190,1.482,196,1.189,199,3.613,208,2.84,209,2.392,210,1.565,211,2.431,212,1.857,213,2.102,214,2.102,215,1.34,216,3.935,217,2.127,218,3.522,219,2.794,220,2.88,221,3.522,222,4.115,223,2.794,224,1.261,225,2.392,226,3.522,227,2.794,228,1.427,229,2.392,230,3.132,231,2.794,232,1.427,233,2.392,234,3.132,235,2.794,236,1.77,237,1.77,238,2.864,239,2.392,240,1.261,241,2.392,242,2.392,243,2.794,244,2.794,245,1.77,246,2.794,247,2.794,248,1.77,249,1.77,250,2.794,251,1.77,252,2.127,253,2.794,254,1.77,255,1.77,256,1.929,257,2.794]],["title/modules/CategoryModule.html",[50,1.17,58,2.29]],["body/modules/CategoryModule.html",[2,1.852,3,0.209,4,0.183,5,0.183,13,0.02,26,0.48,27,0.79,35,0.209,36,0.195,48,0.015,49,0.015,50,1.756,52,1.769,53,2.308,58,4.544,60,2.896,64,2.6,65,1.993,66,1.993,68,2.771,69,2.962,113,1.419,139,2.438,140,2.438,143,2.438,144,3.164,208,4.167,238,3.992,239,3.558,258,3.558,259,4.157,260,3.558,261,3.071,262,4.157,263,2.634,264,4.157,265,2.634]],["title/injectables/CategoryService.html",[78,0.9,238,2.12]],["body/injectables/CategoryService.html",[3,0.139,4,0.121,5,0.121,7,0.298,8,1.254,13,0.021,18,0.821,20,1.838,21,1.571,22,0.742,23,1.27,25,1.838,26,0.403,27,0.526,35,0.139,36,0.13,37,0.996,38,0.996,41,2.066,46,1.838,48,0.011,49,0.011,78,1.017,79,1.177,101,2.653,156,3.11,157,1.412,158,1.412,159,2.039,162,2.085,167,1.852,183,1.412,186,2.327,189,1.248,190,0.996,199,1.51,204,2.439,210,1.553,211,2.419,212,1.842,213,2.085,214,2.479,215,1.957,216,3.922,220,2.869,224,1.842,228,2.085,232,2.085,238,2.394,240,1.248,241,2.367,242,2.367,266,2.367,267,3.107,268,2.765,269,2.765,270,2.765,271,3.107,272,2.765,273,2.765,274,2.765,275,1.908,276,2.765,277,1.752,278,1.51,279,1.51,280,1.752,281,3.143,282,2.765,283,2.587,284,2.765,285,2.847,286,2.765,287,1.752,288,1.752,289,1.752,290,3.694,291,2.765,292,2.765]],["title/classes/CreateCategoryDto.html",[36,0.17,216,2.29]],["body/classes/CreateCategoryDto.html",[3,0.233,4,0.203,5,0.203,7,0.498,12,1.498,13,0.02,18,0.613,21,1.525,22,0.574,26,0.409,30,1.214,35,0.233,36,0.273,43,1.167,48,0.016,49,0.016,153,1.372,178,3.243,199,3.172,200,1.28,216,3.68,293,4.971,294,3.96,295,4.626,296,2.784,297,4.971,298,4.971,299,4.626,300,2.784,301,3.68,302,3.68,303,4.626,304,4.626,305,2.218,306,4.626,307,4.626,308,1.759]],["title/classes/CreateOrderDto.html",[36,0.17,309,2.29]],["body/classes/CreateOrderDto.html",[3,0.179,4,0.156,5,0.156,7,0.382,12,1.805,13,0.02,17,3.714,18,0.739,22,0.826,26,0.423,30,0.932,35,0.179,36,0.262,48,0.013,49,0.013,153,1.153,164,2.862,167,1.422,168,3.045,176,3.27,200,0.982,204,2.162,296,2.878,300,2.878,305,1.702,308,2.121,309,3.092,310,5.139,311,3.039,312,3.848,313,4.243,314,3.521,315,3.039,316,4.177,317,3.403,318,3.55,319,3.55,320,3.55,321,3.368,322,4.88,323,5.575,324,2.076,325,4.88,326,3.368,327,3.039,328,3.55,329,3.039,330,2.492,331,4.88,332,3.714,333,3.55,334,3.039,335,4.177,336,4.177,337,3.714,338,3.039,339,4.88,340,3.848,341,3.55]],["title/classes/CreateProductDto.html",[36,0.17,342,2.12]],["body/classes/CreateProductDto.html",[3,0.163,4,0.142,5,0.142,7,0.349,12,1.971,13,0.02,18,0.807,21,1.203,22,0.755,26,0.323,30,0.851,35,0.163,36,0.215,39,2.34,43,1.333,48,0.012,49,0.012,153,1.082,172,2.901,178,3.11,199,2.502,200,0.897,204,1.65,296,3.279,297,3.921,298,3.921,300,3.03,301,3.657,302,3.657,305,1.555,308,2.601,324,2.911,342,2.687,343,5.41,344,2.238,345,4.043,346,4.634,347,2.776,348,4.582,349,3.243,350,3.162,351,4.582,352,4.582,353,5.773,354,4.582,355,4.582,356,3.243,357,2.776,358,4.582,359,4.582,360,3.243,361,3.243,362,3.243,363,4.582,364,3.243,365,4.582,366,3.243,367,3.921,368,3.243,369,3.921,370,3.243,371,2.776]],["title/classes/CreateTableDto.html",[36,0.17,372,2.12]],["body/classes/CreateTableDto.html",[3,0.236,4,0.206,5,0.206,7,0.505,12,1.519,13,0.02,18,0.622,22,0.582,26,0.413,30,1.232,35,0.236,36,0.275,48,0.016,49,0.016,153,1.384,200,1.298,204,2.567,296,2.809,300,2.809,305,2.25,308,1.785,316,5.016,330,2.993,332,4.459,337,4.459,367,5.016,372,3.436,373,5.016,374,3.571,375,4.692,376,4.692]],["title/classes/CreateUserDto.html",[36,0.17,377,2.12]],["body/classes/CreateUserDto.html",[3,0.139,4,0.121,5,0.121,7,0.298,12,1.937,13,0.02,18,0.793,21,1.072,22,0.742,26,0.288,30,0.726,35,0.139,36,0.192,43,1.326,48,0.011,49,0.011,92,3.495,97,1.952,153,0.965,168,2.23,169,3.123,170,2.847,171,3.922,172,2.651,173,2.847,200,0.765,204,1.471,265,2.587,296,3.247,300,2.968,301,2.587,302,3.396,305,1.326,308,2.276,314,3.143,315,2.367,332,5.022,335,3.495,347,2.367,350,1.908,357,2.367,369,3.495,377,2.394,378,5.298,379,2.104,380,4.854,381,4.083,382,4.588,383,2.765,384,2.367,385,4.083,386,3.495,387,2.765,388,4.083,389,4.083,390,2.765,391,4.083,392,4.083,393,2.765,394,2.765,395,4.083,396,4.083,397,4.083,398,4.083,399,4.083,400,4.083,401,3.107,402,4.083,403,4.083,404,5.36,405,4.083,406,5.36,407,2.765,408,4.083,409,4.083,410,4.083,411,2.765,412,2.367,413,4.854,414,2.765,415,4.083,416,4.083,417,2.765,418,3.495,419,2.765,420,2.765,421,4.083,422,2.765]],["title/classes/FavoriteProductDto.html",[36,0.17,423,2.29]],["body/classes/FavoriteProductDto.html",[3,0.235,4,0.205,5,0.205,7,0.502,12,1.508,13,0.02,18,0.618,22,0.578,26,0.411,30,1.223,35,0.235,36,0.274,43,1.172,48,0.016,49,0.016,153,1.378,167,2.074,200,1.289,296,2.797,300,2.797,305,2.234,308,1.772,324,2.841,338,4.993,344,3.215,423,3.696,424,4.993,425,4.659,426,4.993,427,4.44,428,4.659]],["title/injectables/JwtAdmOnlyStrategy.html",[78,0.9,261,1.631]],["body/injectables/JwtAdmOnlyStrategy.html",[3,0.166,4,0.145,5,0.145,7,0.354,8,1.422,13,0.021,18,0.614,20,1.422,21,1.215,22,0.721,23,0.983,25,1.011,26,0.41,27,0.626,35,0.233,36,0.217,37,1.668,38,1.668,41,1.97,43,0.93,46,1.422,48,0.013,49,0.013,78,1.334,79,1.401,97,1.951,113,1.124,135,1.578,145,2.933,148,3.524,156,2.786,157,1.682,158,1.682,159,2.329,162,2.736,169,3.173,173,1.931,182,2.272,183,1.682,186,2.22,187,3.195,189,2.089,190,1.668,195,3.195,196,1.97,198,2.272,261,2.089,265,2.086,275,2.272,314,1.931,429,2.505,430,3.963,431,3.292,432,4.584,433,3.963,434,3.292,435,2.818,436,2.818,437,2.818,438,2.818,439,2.505,440,2.715,441,3.963,442,3.963,443,3.963,444,3.963,445,3.963,446,3.195,447,3.963,448,3.963,449,3.963,450,3.524,451,3.524]],["title/injectables/JwtStrategy.html",[78,0.9,135,1.733]],["body/injectables/JwtStrategy.html",[3,0.166,4,0.145,5,0.145,7,0.354,8,1.422,13,0.021,18,0.614,20,1.422,21,1.215,22,0.721,23,0.983,25,1.011,26,0.41,27,0.626,35,0.233,36,0.217,37,1.668,38,1.668,41,1.97,43,0.93,46,1.422,48,0.013,49,0.013,78,1.334,79,1.401,97,1.951,113,1.124,135,2.22,145,2.933,148,3.524,156,2.786,157,1.682,158,1.682,159,2.329,162,2.736,169,3.173,173,1.931,182,2.272,183,1.682,186,2.22,187,3.195,189,2.089,190,1.668,195,3.195,196,1.97,198,2.272,261,1.485,265,2.086,275,2.272,314,1.931,429,2.505,430,3.963,432,4.584,433,3.963,435,2.818,436,2.818,437,2.818,438,2.818,439,2.505,440,2.715,441,3.963,442,3.963,443,3.963,444,3.963,445,3.963,446,3.195,447,3.963,448,3.963,449,3.963,450,3.524,451,3.524,452,3.292,453,3.292]],["title/classes/LoginDto.html",[36,0.17,94,2.29]],["body/classes/LoginDto.html",[3,0.22,4,0.192,5,0.192,7,0.47,12,1.812,13,0.02,18,0.742,22,0.694,26,0.395,30,1.146,35,0.22,36,0.263,43,1.31,48,0.015,49,0.015,94,3.546,97,2.002,153,1.322,169,3.68,171,4.27,200,1.207,296,3.125,300,2.962,301,3.546,302,3.546,305,2.092,308,2.129,350,3.012,382,4.791,384,3.736,386,4.791,418,4.791,454,3.736,455,4.365,456,4.365]],["title/classes/LoginResponseDto.html",[36,0.17,118,2.29]],["body/classes/LoginResponseDto.html",[3,0.219,4,0.191,5,0.191,7,0.468,12,1.808,13,0.02,18,0.74,22,0.693,26,0.394,30,1.142,35,0.219,36,0.204,43,1.122,48,0.015,49,0.015,91,4.251,97,2.116,99,4.695,104,4.781,115,3.002,118,3.539,145,4.124,153,1.32,200,1.203,281,3.276,296,2.678,300,2.958,308,2.124,457,5.281,458,3.723,459,4.781,460,5.585,461,5.585,462,5.585,463,4.35,464,3.539,465,4.35]],["title/classes/Order.html",[36,0.17,317,1.846]],["body/classes/Order.html",[3,0.205,4,0.179,5,0.179,7,0.438,13,0.02,18,0.914,22,0.855,23,1.516,26,0.377,35,0.205,36,0.191,43,1.074,48,0.015,49,0.015,97,1.949,115,2.807,153,1.263,167,1.741,176,3.503,179,2.695,200,1.125,202,3.387,204,2.285,312,4.122,313,4.546,314,3.136,317,3.051,464,3.387,466,3.481,467,5.973,468,4.067,469,4.067,470,4.067,471,3.784,472,4.067,473,4.067,474,4.067,475,4.067,476,3.481]],["title/controllers/OrderController.html",[0,1.234,477,2.495]],["body/controllers/OrderController.html",[0,0.86,2,0.86,3,0.127,4,0.111,5,0.111,7,0.271,8,1.17,12,1.872,13,0.02,18,0.766,20,1.572,21,1.344,22,0.635,23,1.087,25,1.776,26,0.436,27,0.479,28,3.279,29,1.377,30,0.662,35,0.127,36,0.118,37,0.908,38,0.908,39,2.954,41,1.073,46,1.776,48,0.01,49,0.01,89,1.478,97,1.844,101,2.485,107,1.478,108,1.478,109,1.478,110,2.235,111,1.478,112,1.478,113,0.86,114,3.521,115,1.74,122,2.414,124,1.918,167,1.91,174,3.002,176,3.002,190,1.372,196,1.955,204,2.227,210,1.947,211,2.31,212,1.719,213,1.946,224,1.137,228,1.288,236,1.597,237,1.597,240,1.137,245,1.597,248,1.597,249,1.597,251,1.597,254,1.597,255,1.597,256,1.74,285,2.235,309,3.663,317,3.295,321,3.533,477,2.63,478,2.158,479,3.261,480,5.12,481,2.521,482,2.158,483,2.521,484,2.158,485,1.918,486,3.81,487,2.521,488,1.918,489,2.521,490,2.521,491,2.521,492,1.918,493,3.261,494,2.521,495,1.918,496,2.521,497,1.74,498,2.158,499,2.158,500,2.694,501,2.158,502,2.521,503,2.521,504,3.496,505,2.158,506,2.521,507,3.496,508,2.521,509,2.521,510,2.521,511,2.521,512,2.521,513,2.521,514,2.521,515,2.521]],["title/modules/OrderModule.html",[50,1.17,59,2.29]],["body/modules/OrderModule.html",[2,1.836,3,0.207,4,0.18,5,0.18,13,0.02,26,0.478,27,0.78,35,0.207,36,0.193,48,0.015,49,0.015,50,1.741,52,1.747,53,2.289,59,4.597,60,2.887,64,2.579,65,1.968,66,1.968,68,2.748,69,2.938,113,1.401,135,3.252,139,2.408,140,2.408,143,2.408,261,3.061,263,2.601,477,4.141,500,3.978,501,3.514,516,3.514,517,3.514,518,4.105,519,4.105,520,4.105]],["title/classes/OrderProducts.html",[36,0.17,471,2.29]],["body/classes/OrderProducts.html",[3,0.243,4,0.212,5,0.212,7,0.52,13,0.02,18,0.858,22,0.803,23,1.266,35,0.243,36,0.227,43,1.359,48,0.016,49,0.016,153,1.41,200,1.336,204,2.149,326,4.468,471,3.78,521,5.787,522,4.134,523,4.927,524,4.927,525,4.83,526,4.83,527,4.83]],["title/classes/OrderProductsDto.html",[36,0.17,340,2.495]],["body/classes/OrderProductsDto.html",[3,0.193,4,0.169,5,0.169,7,0.413,12,1.879,13,0.02,18,0.77,22,0.72,23,1.093,26,0.363,30,1.008,35,0.193,36,0.242,43,1.246,48,0.014,49,0.014,153,1.216,165,2.811,178,3.168,200,1.062,204,1.854,296,2.974,300,2.974,301,3.261,302,3.261,305,1.841,308,2.208,324,2.941,326,4.463,327,3.288,329,3.288,336,4.406,337,3.917,340,3.553,350,2.651,371,4.406,426,4.406,427,3.917,459,3.288,523,4.922,524,4.418,528,5.309,529,3.288,530,3.841,531,6.202,532,3.841,533,3.841,534,3.841]],["title/injectables/OrderService.html",[78,0.9,500,2.12]],["body/injectables/OrderService.html",[3,0.103,4,0.09,5,0.09,7,0.221,8,0.999,13,0.021,18,0.789,20,1.634,21,1.397,22,0.691,23,1.129,25,1.712,26,0.393,27,0.391,35,0.103,36,0.096,37,0.74,38,0.74,41,1.384,43,0.811,46,1.712,48,0.009,49,0.009,78,0.81,79,0.875,97,1.24,101,2.451,153,0.769,154,2.558,156,2.853,157,1.05,158,1.05,159,1.746,162,2.062,164,1.205,165,1.122,166,1.205,167,1.935,168,3.737,170,1.908,175,3.771,176,2.934,179,1.468,183,1.05,186,1.936,189,0.927,190,0.74,204,2.312,210,1.536,211,2.072,212,1.468,213,1.662,215,1.56,220,0.985,224,1.468,228,1.662,240,0.927,267,2.476,271,2.476,275,2.245,277,1.302,278,1.122,279,1.122,280,1.302,281,2.693,283,1.302,285,2.368,287,1.302,288,1.302,289,1.302,290,3.073,309,2.909,312,3.453,313,2.476,317,1.05,326,2.787,330,1.05,446,2.245,471,2.061,476,1.759,479,2.784,484,2.784,498,1.759,499,1.759,500,1.908,523,3.073,524,3.073,535,1.759,536,4.038,537,4.591,538,2.055,539,2.055,540,2.055,541,2.055,542,2.055,543,2.055,544,2.055,545,2.055,546,2.055,547,1.302,548,2.055,549,2.055,550,2.055,551,2.784,552,2.055,553,2.055,554,2.055,555,2.055,556,2.055,557,2.055,558,2.055,559,4.591,560,3.253,561,2.055,562,2.055,563,2.055,564,2.055]],["title/modules/PrismaModule.html",[50,1.17,60,1.538]],["body/modules/PrismaModule.html",[3,0.238,4,0.208,5,0.208,13,0.02,26,0.415,27,0.898,35,0.238,36,0.222,48,0.016,49,0.016,50,1.905,52,2.011,53,2.505,60,3.037,64,2.822,65,2.266,66,2.266,68,3.007,159,2.814,565,4.045,566,4.045,567,4.045,568,4.726,569,5.886,570,4.726]],["title/injectables/PrismaService.html",[78,0.9,159,1.375]],["body/injectables/PrismaService.html",[3,0.218,4,0.19,5,0.19,7,0.467,8,1.712,13,0.02,18,0.739,20,1.332,21,1.138,22,0.538,23,0.92,25,1.712,26,0.393,27,0.824,35,0.218,36,0.204,48,0.015,49,0.015,78,1.388,79,1.845,156,3.357,159,2.12,186,2.672,440,3.269,547,2.747,571,3.711,572,6.16,573,5.574,574,6.884,575,5.574,576,6.502,577,4.336,578,3.711,579,4.336,580,4.336,581,4.336,582,4.336,583,4.336]],["title/classes/Product.html",[36,0.17,324,1.538]],["body/classes/Product.html",[3,0.207,4,0.181,5,0.181,7,0.443,13,0.02,18,0.93,22,0.87,23,1.489,35,0.207,36,0.193,43,1.439,48,0.015,49,0.015,153,1.274,167,1.752,172,3.282,178,3.07,179,2.711,180,3.07,200,1.139,202,4.039,204,1.942,308,2.286,324,2.294,345,4.573,346,4.573,584,3.525,585,4.118,586,4.118,587,4.118,588,4.118,589,4.118,590,4.118,591,4.118,592,4.118]],["title/controllers/ProductController.html",[0,1.234,593,2.495]],["body/controllers/ProductController.html",[0,0.946,2,0.946,3,0.139,4,0.122,5,0.122,7,0.298,8,1.256,12,1.853,13,0.02,14,2.109,18,0.759,20,1.648,21,1.409,22,0.665,23,1.139,25,1.758,26,0.437,27,0.527,28,3.27,29,1.513,30,0.727,35,0.139,36,0.13,37,0.998,38,0.998,39,2.923,43,1.305,46,1.758,48,0.011,49,0.011,89,1.625,101,2.556,107,2.398,108,1.625,109,1.625,110,2.398,111,1.625,112,1.625,113,0.946,114,2.398,130,2.109,167,1.853,190,1.473,196,1.179,210,1.555,211,2.421,212,1.845,213,2.089,214,2.482,215,1.328,217,2.109,218,3.5,220,2.871,224,1.25,225,2.372,226,4.593,228,1.415,229,2.372,230,3.112,232,1.415,233,2.372,234,3.112,236,1.755,237,1.755,240,1.25,245,1.755,248,1.755,249,1.755,251,1.755,254,1.755,255,1.755,256,1.912,312,2.822,324,2.81,342,3.147,593,2.822,594,2.372,595,2.771,596,2.771,597,2.771,598,2.771,599,3.399,600,2.771,601,2.591,602,1.625,603,2.372,604,2.85,605,2.372,606,2.771,607,2.771,608,2.771,609,2.771,610,2.771,611,2.771,612,2.771,613,2.771]],["title/modules/ProductModule.html",[50,1.17,61,2.29]],["body/modules/ProductModule.html",[2,1.833,3,0.206,4,0.18,5,0.18,13,0.02,26,0.487,27,0.778,35,0.206,36,0.192,48,0.015,49,0.015,50,1.738,52,1.742,53,2.285,60,2.884,61,4.532,64,2.574,65,1.962,66,1.962,68,2.742,69,2.932,113,1.397,137,3.503,138,2.824,139,2.4,140,2.4,143,2.4,144,3.114,261,3.058,263,2.593,265,2.593,593,4.135,604,3.975,605,3.503,614,3.503,615,4.092,616,3.503,617,4.092,618,4.092]],["title/injectables/ProductService.html",[78,0.9,604,2.12]],["body/injectables/ProductService.html",[3,0.12,4,0.105,5,0.105,7,0.257,8,1.123,13,0.021,18,0.806,20,1.739,21,1.486,22,0.731,23,1.202,25,1.739,26,0.415,27,0.454,35,0.12,36,0.112,37,0.86,38,0.86,41,1.891,43,1.319,46,1.648,48,0.01,49,0.01,78,0.911,79,1.016,101,2.557,153,0.864,154,2.815,156,2.987,157,1.22,158,1.22,159,1.894,162,2.27,164,1.4,165,1.304,166,1.4,167,1.853,168,3.731,172,1.997,175,3.154,178,1.868,179,1.65,180,1.868,183,1.22,186,2.387,189,1.077,190,0.86,210,1.69,211,2.247,212,1.65,213,1.868,214,2.27,215,1.753,220,2.714,224,1.65,228,1.868,232,1.868,240,1.077,267,2.783,271,2.783,277,1.513,278,1.304,279,1.304,280,1.513,281,2.92,283,2.317,285,2.606,287,1.513,288,1.513,289,1.513,290,3.381,308,1.391,324,1.016,342,2.92,345,2.783,346,2.783,547,1.513,599,3.154,601,2.317,602,1.4,603,2.044,604,2.144,619,2.044,620,4.443,621,2.388,622,2.388,623,2.388,624,2.388,625,2.388,626,2.388,627,2.388,628,2.388,629,2.388,630,4.979,631,2.388,632,2.388,633,3.656,634,2.388]],["title/classes/Table.html",[36,0.17,330,1.846]],["body/classes/Table.html",[3,0.223,4,0.194,5,0.194,7,0.476,13,0.02,18,0.897,22,0.839,23,1.511,26,0.312,35,0.223,36,0.208,43,1.135,48,0.015,49,0.015,153,1.334,167,1.812,174,3.647,179,2.806,180,3.176,200,1.224,202,4.15,204,2.437,317,2.259,330,2.884,464,3.577,635,3.786,636,4.423,637,4.423,638,4.423,639,4.423,640,4.423,641,3.786]],["title/controllers/TableController.html",[0,1.234,642,2.495]],["body/controllers/TableController.html",[0,0.917,2,0.917,3,0.135,4,0.118,5,0.118,7,0.289,8,1.227,12,1.829,13,0.02,18,0.749,20,1.623,21,1.387,22,0.655,23,1.122,25,1.735,26,0.432,27,0.511,28,3.234,29,1.467,30,0.705,35,0.135,36,0.126,37,0.967,39,2.886,43,1.294,46,1.735,48,0.011,49,0.011,89,1.575,101,2.533,107,2.343,108,1.575,109,1.575,110,2.343,111,1.575,112,1.575,113,0.917,114,3.473,167,1.962,196,2.404,210,2.01,211,2.384,212,1.803,214,2.699,215,1.288,220,2.839,224,1.212,232,1.372,236,1.702,237,1.702,240,1.212,245,1.702,248,1.702,249,1.702,251,1.702,252,2.044,254,1.702,255,1.702,321,3.647,330,3.347,372,3.099,412,5.393,482,2.299,485,2.044,488,2.044,492,2.044,495,2.044,504,2.044,507,4.022,602,1.575,642,2.758,643,2.299,644,2.686,645,2.299,646,2.686,647,3.996,648,2.686,649,2.686,650,3.348,651,2.686,652,3.041,653,2.299,654,2.798,655,2.299,656,2.686,657,2.686,658,2.686,659,2.686,660,2.686,661,2.686,662,2.686,663,2.686]],["title/modules/TableModule.html",[50,1.17,62,2.29]],["body/modules/TableModule.html",[2,1.836,3,0.207,4,0.18,5,0.18,13,0.02,26,0.478,27,0.78,35,0.207,36,0.193,48,0.015,49,0.015,50,1.741,52,1.747,53,2.289,60,2.887,62,4.597,64,2.579,65,1.968,66,1.968,68,2.748,69,2.938,113,1.401,135,3.252,139,2.408,140,2.408,143,2.408,261,3.061,263,2.601,642,4.141,654,3.978,655,3.514,664,3.514,665,3.514,666,4.105,667,4.105,668,4.105]],["title/injectables/TableService.html",[78,0.9,654,2.12]],["body/injectables/TableService.html",[3,0.116,4,0.101,5,0.101,7,0.248,8,1.094,13,0.021,15,1.756,18,0.797,20,1.715,21,1.466,22,0.722,23,1.185,25,1.715,26,0.394,27,0.439,35,0.116,36,0.108,37,0.831,38,0.831,41,1.851,43,1.308,46,1.623,48,0.01,49,0.01,78,0.887,79,0.982,97,1.094,101,2.533,153,0.842,154,2.756,156,2.958,157,1.179,158,1.179,159,1.86,162,1.819,164,1.354,165,1.26,166,1.354,167,1.962,168,3.641,170,2.089,174,2.089,175,3.809,179,1.607,180,1.819,183,1.179,186,2.345,189,1.041,190,0.831,196,1.516,204,1.283,210,1.654,211,2.207,212,1.607,214,2.222,215,1.708,220,2.678,224,1.607,232,1.819,240,1.041,277,1.462,278,1.26,279,1.26,280,1.462,281,2.868,283,2.257,285,2.551,287,1.462,288,1.462,289,1.462,330,1.819,372,2.868,602,1.354,645,3.049,650,3.348,652,2.711,653,1.975,654,2.089,669,1.975,670,4.35,671,3.562,672,2.308,673,2.308,674,2.308,675,2.308,676,2.308,677,2.308,678,3.562,679,2.308,680,2.308,681,2.308,682,4.891,683,2.308,684,4.35,685,3.562,686,2.308,687,2.308]],["title/classes/UpdateProductDto.html",[36,0.17,599,2.29]],["body/classes/UpdateProductDto.html",[3,0.266,4,0.232,5,0.232,13,0.02,26,0.444,30,1.385,35,0.266,36,0.248,48,0.017,49,0.017,200,1.46,210,2.007,342,3.095,344,3.642,440,3.095,599,3.988,601,3.343,688,4.517,689,4.016,690,5.277]],["title/classes/UpdateTableDto.html",[36,0.17,650,2.29]],["body/classes/UpdateTableDto.html",[3,0.266,4,0.232,5,0.232,13,0.02,26,0.444,30,1.385,35,0.266,36,0.248,48,0.017,49,0.017,200,1.46,210,2.007,372,3.095,374,4.016,440,3.095,650,3.988,652,4.016,689,4.016,691,4.517,692,5.277]],["title/classes/UpdateUserDto.html",[36,0.17,693,2.29]],["body/classes/UpdateUserDto.html",[3,0.266,4,0.232,5,0.232,13,0.02,26,0.444,30,1.385,35,0.266,36,0.248,48,0.017,49,0.017,200,1.46,210,2.007,377,3.095,379,4.016,440,3.095,689,4.016,693,3.988,694,4.517,695,4.016,696,5.277]],["title/classes/User.html",[36,0.17,97,1.11]],["body/classes/User.html",[3,0.189,4,0.165,5,0.165,7,0.405,13,0.02,18,0.934,22,0.874,23,1.495,26,0.358,35,0.189,36,0.177,43,1.416,48,0.014,49,0.014,97,1.56,153,1.2,167,1.675,169,3.138,170,3.37,171,3.641,172,3.138,173,3.37,174,3.37,177,4.373,179,2.593,180,2.935,200,1.041,202,3.897,314,2.978,317,1.923,324,1.602,464,3.897,641,3.222,697,3.222,698,3.764,699,3.764,700,3.764,701,3.764,702,3.764,703,3.764,704,3.764,705,3.764,706,3.764,707,3.764,708,3.764]],["title/controllers/UserController.html",[0,1.234,709,2.495]],["body/controllers/UserController.html",[0,0.681,2,0.681,3,0.1,4,0.088,5,0.088,7,0.215,8,0.976,12,1.784,13,0.02,18,0.758,20,1.693,21,1.447,22,0.683,23,1.17,25,1.757,26,0.416,27,0.379,28,3.124,29,1.09,30,0.524,35,0.1,36,0.094,37,0.719,38,0.719,39,2.815,43,1.35,46,1.693,48,0.009,49,0.009,89,1.17,97,2.217,101,2.524,107,2.649,108,1.17,109,1.17,110,1.864,111,1.17,112,1.17,113,0.681,114,3.232,122,2.861,124,1.519,167,1.941,182,1.377,189,1.434,190,1.627,196,0.849,198,1.377,210,1.718,211,2.038,212,1.434,213,1.623,214,1.623,215,0.957,217,1.519,220,3.097,221,2.72,224,0.9,228,1.019,230,2.419,232,1.019,234,2.419,236,1.264,237,1.264,240,0.9,245,1.264,248,1.264,249,1.264,251,1.264,252,1.519,254,1.264,255,1.264,256,1.377,321,2.194,324,1.922,377,2.649,423,3.491,450,2.419,451,2.419,485,1.519,488,1.519,492,1.519,495,1.519,497,1.377,504,3.753,505,2.72,507,1.519,601,1.264,602,1.17,693,2.861,695,2.419,709,2.194,710,1.708,711,3.866,712,3.866,713,3.178,714,1.996,715,1.708,716,1.996,717,1.996,718,3.178,719,1.996,720,1.996,721,1.996,722,1.708,723,1.996,724,1.996,725,1.996,726,3.178,727,1.996,728,3.178,729,1.996,730,1.708,731,1.708,732,2.323,733,1.708,734,1.996,735,1.996,736,1.996,737,3.178,738,3.178,739,1.996,740,1.996,741,1.996,742,1.996,743,1.996,744,1.996,745,1.996,746,1.996,747,1.996,748,1.996]],["title/modules/UserModule.html",[50,1.17,63,2.29]],["body/modules/UserModule.html",[2,1.836,3,0.207,4,0.18,5,0.18,13,0.02,26,0.478,27,0.78,35,0.207,36,0.193,48,0.015,49,0.015,50,1.741,52,1.747,53,2.289,60,2.887,63,4.597,64,2.579,65,1.968,66,1.968,68,2.748,69,2.938,113,1.401,135,3.252,139,2.408,140,2.408,143,2.408,261,3.061,263,2.601,709,4.141,732,3.978,733,3.514,749,3.514,750,3.514,751,4.105,752,4.105,753,4.105]],["title/injectables/UserService.html",[78,0.9,732,2.12]],["body/injectables/UserService.html",[3,0.087,4,0.076,5,0.076,7,0.186,8,0.867,13,0.021,18,0.764,20,1.663,21,1.421,22,0.695,23,1.149,25,1.663,26,0.395,27,0.328,35,0.087,36,0.081,37,0.621,38,0.621,41,1.947,43,1.311,46,1.593,48,0.008,49,0.008,78,0.703,79,0.733,97,0.867,101,2.505,153,0.667,154,2.272,155,3.069,156,3.127,157,0.88,158,0.88,159,1.577,162,1.831,164,1.011,165,0.941,166,1.011,167,1.933,168,3.671,169,1.542,170,1.655,171,2.627,172,1.542,173,1.655,174,1.655,175,3.654,176,1.655,177,3.155,178,1.442,179,1.274,180,1.442,183,0.88,184,1.475,185,1.311,186,2.596,187,1.189,188,4.205,189,1.618,190,1.291,196,1.201,210,1.364,211,1.87,212,1.274,213,1.442,214,2.337,215,1.353,220,2.987,224,1.274,228,1.442,232,1.442,240,0.778,277,1.092,278,0.941,279,0.941,280,1.092,281,3.175,283,2.627,285,2.103,287,1.092,288,1.092,289,1.092,377,2.431,401,2.148,423,3.286,446,1.948,464,1.092,547,1.092,551,1.475,601,1.092,602,1.011,693,2.627,695,2.148,711,2.416,712,2.416,715,2.416,722,2.416,730,1.475,731,1.475,732,1.655,754,1.475,755,2.823,756,1.723,757,1.723,758,1.723,759,1.723,760,1.723,761,1.723,762,1.723,763,1.723,764,2.823,765,1.723,766,1.723,767,1.723,768,1.723,769,4.574,770,2.823,771,2.823,772,4.146,773,1.723,774,4.146,775,4.146,776,2.823,777,2.823,778,2.823,779,2.823,780,1.723]],["title/coverage.html",[781,3.76]],["body/coverage.html",[0,2.112,1,1.904,5,0.121,6,2.362,13,0.02,22,0.342,32,1.618,36,0.332,48,0.011,49,0.011,78,1.643,80,2.362,87,1.904,88,2.362,94,1.748,97,0.847,116,1.618,118,1.748,122,1.748,135,1.323,152,2.362,159,1.049,190,0.994,199,1.507,201,2.362,208,1.904,209,2.362,216,1.748,238,1.618,261,1.245,266,2.362,278,1.507,279,1.507,293,2.362,294,2.362,309,1.748,310,2.362,311,2.362,317,1.409,324,1.174,330,2.082,340,1.904,342,1.618,343,2.362,344,3.346,372,1.618,373,2.362,374,3.102,377,1.618,378,2.362,379,3.102,423,1.748,424,2.362,429,3.102,454,2.362,457,2.362,458,2.362,466,2.362,471,1.748,477,1.904,478,2.362,497,1.904,500,1.618,521,2.362,522,2.362,528,2.362,529,2.362,535,2.362,571,2.362,584,2.362,593,1.904,594,2.362,599,1.748,604,1.618,619,2.362,635,2.362,642,1.904,643,2.362,650,1.748,654,1.618,669,2.362,688,2.362,691,2.362,693,1.748,694,2.362,697,2.362,709,1.904,710,2.362,732,1.618,754,2.362,781,2.1,782,2.759,783,2.759,784,2.759,785,7.443,786,5.713,787,5.98,788,5.355,789,2.362,790,4.076,791,5.98,792,5.713,793,4.076,794,2.759,795,2.362,796,2.759,797,2.362,798,4.076,799,2.759,800,5.355,801,4.076,802,2.362,803,2.759]],["title/dependencies.html",[53,1.851,804,2.581]],["body/dependencies.html",[13,0.021,27,0.864,30,1.193,31,4.917,36,0.27,48,0.016,49,0.016,53,1.935,113,1.552,138,3.137,145,2.88,185,3.46,305,2.179,334,3.891,439,4.793,547,2.88,805,6.298,806,4.546,807,5.744,808,4.546,809,4.546,810,4.546,811,4.546,812,4.546,813,4.546,814,4.546,815,4.546,816,4.546,817,4.546,818,4.546,819,4.546,820,4.546,821,4.546,822,4.546,823,4.546,824,4.546,825,4.546,826,4.546,827,4.546,828,3.891,829,4.546,830,4.546]],["title/miscellaneous/functions.html",[831,2.081,832,3.723]],["body/miscellaneous/functions.html",[7,0.607,13,0.018,48,0.018,49,0.018,795,4.827,797,5.921,831,3.892,832,4.827,833,5.64]],["title/index.html",[7,0.325,834,3.015,835,3.015]],["body/index.html",[4,0.174,13,0.02,15,4.004,48,0.014,49,0.014,83,4.503,84,3.397,85,3.397,308,1.509,427,3.02,493,3.397,578,3.397,781,3.02,828,3.397,836,3.969,837,3.969,838,5.261,839,3.969,840,3.969,841,3.969,842,3.969,843,3.969,844,5.901,845,3.969,846,3.969,847,3.969,848,3.969,849,5.261,850,3.969,851,3.969,852,3.969,853,3.969,854,3.969,855,3.969,856,6.855,857,3.969,858,3.969,859,6.719,860,3.969,861,3.969,862,5.261,863,3.969,864,3.969,865,3.969,866,5.261,867,5.261,868,3.969,869,3.969,870,3.969,871,5.261,872,5.261,873,3.969,874,3.969,875,3.969,876,3.969,877,3.969,878,3.397,879,3.969,880,3.969,881,3.969,882,3.969,883,3.969,884,3.969,885,3.969,886,3.969,887,3.397,888,3.969,889,3.969,890,3.969,891,3.969,892,3.969,893,3.969,894,3.397]],["title/modules.html",[52,2.102]],["body/modules.html",[13,0.016,48,0.016,49,0.016,51,3.409,52,2.102,57,3.129,58,3.129,59,3.129,60,2.102,61,3.129,62,3.129,63,3.129,878,6.226,895,7.274,896,7.274,897,7.274]],["title/overview.html",[898,4.229]],["body/overview.html",[2,1.068,13,0.02,32,3.054,48,0.012,49,0.012,51,4.971,52,1.331,53,1.9,54,2.677,55,2.677,56,2.677,57,4.238,58,4.238,59,4.351,60,2.952,61,4.238,62,4.351,63,4.351,64,2.14,65,1.499,66,1.499,79,1.331,116,3.054,132,2.677,133,2.677,135,2.994,159,2.445,200,0.865,238,3.054,258,2.677,260,2.677,261,2.9,401,2.38,500,3.054,516,2.677,517,2.677,565,2.677,566,2.677,567,2.677,604,3.054,614,2.677,616,2.677,654,3.054,664,2.677,665,2.677,732,3.054,749,2.677,750,2.677,898,2.677,899,3.127,900,3.127,901,3.127]],["title/properties.html",[153,1.028,804,2.581]],["body/properties.html",[13,0.02,48,0.018,49,0.018,153,1.315,308,2.118,887,4.766,894,4.766,902,5.568,903,5.568,904,5.568]],["title/miscellaneous/variables.html",[831,2.081,905,3.723]],["body/miscellaneous/variables.html",[7,0.489,11,3.891,13,0.02,41,2.816,46,1.396,48,0.016,49,0.016,97,1.764,122,3.639,165,3.137,166,3.369,189,2.051,190,1.637,195,3.137,196,1.935,278,3.137,279,2.483,497,3.137,789,4.917,802,4.917,831,3.137,905,3.891,906,4.546,907,4.546,908,6.298,909,4.546,910,4.546,911,4.546,912,5.744,913,4.546,914,4.546,915,4.546,916,4.546,917,4.546,918,4.546,919,4.546,920,4.546,921,4.546,922,4.546,923,4.546]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/FavoriteProductDto.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"classes/OrderProducts.html":{},"classes/OrderProductsDto.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":785,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":903,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":786,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":787,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":788,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":794,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":792,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":793,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":332,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{}}}],["1.0.0",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":900,"title":{},"body":{"overview.html":{}}}],["18",{"_index":901,"title":{},"body":{"overview.html":{}}}],["1]?.trim",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":371,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/OrderProductsDto.html":{}}}],["2.4.3",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["21.99",{"_index":363,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["24h",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{}}}],["2})@isnotempty()@apiproperty({description",{"_index":362,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["3.0.2",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["3.15.2",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":899,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":401,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["8.0.0",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":807,"title":{},"body":{"dependencies.html":{}}}],["9])(?=.*[!@#$%^&*])(?=.{8",{"_index":397,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["_count",{"_index":561,"title":{},"body":{"injectables/OrderService.html":{}}}],["abcdef@1",{"_index":382,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["active",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["admin",{"_index":265,"title":{},"body":{"modules/CategoryModule.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"modules/ProductModule.html":{}}}],["alphabetical",{"_index":409,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["alphabetical\\nat",{"_index":421,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["amazing",{"_index":879,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["api",{"_index":86,"title":{},"body":{"injectables/AppService.html":{}}}],["apibearerauth",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":300,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/FavoriteProductDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/OrderProductsDto.html":{}}}],["apiproperty({description",{"_index":459,"title":{},"body":{"classes/LoginResponseDto.html":{},"classes/OrderProductsDto.html":{}}}],["apitags",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('category",{"_index":243,"title":{},"body":{"controllers/CategoryController.html":{}}}],["apitags('order",{"_index":502,"title":{},"body":{"controllers/OrderController.html":{}}}],["apitags('product",{"_index":606,"title":{},"body":{"controllers/ProductController.html":{}}}],["apitags('status",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('table",{"_index":656,"title":{},"body":{"controllers/TableController.html":{}}}],["apitags('user",{"_index":734,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":578,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":583,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["applications",{"_index":843,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":51,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":32,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":87,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{}}}],["authguard",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":57,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":887,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":116,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":461,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["await",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["backers",{"_index":880,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":767,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('passwords",{"_index":776,"title":{},"body":{"injectables/UserService.html":{}}}],["baseurl",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["bcrypt",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["bcrypt.compare(password",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(dto.password",{"_index":779,"title":{},"body":{"injectables/UserService.html":{}}}],["bcryptjs",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["belongs",{"_index":348,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["body",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":314,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":797,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":897,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":895,"title":{},"body":{"modules.html":{}}}],["building",{"_index":839,"title":{},"body":{"index.html":{}}}],["case",{"_index":404,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["catch(handleerror",{"_index":283,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["categories",{"_index":222,"title":{},"body":{"controllers/CategoryController.html":{}}}],["category",{"_index":199,"title":{"classes/Category.html":{}},"body":{"classes/Category.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"coverage.html":{}}}],["category.controller",{"_index":264,"title":{},"body":{"modules/CategoryModule.html":{}}}],["category.dto",{"_index":241,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["category.dto.ts",{"_index":294,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["category.dto.ts:13",{"_index":299,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.service",{"_index":239,"title":{},"body":{"controllers/CategoryController.html":{},"modules/CategoryModule.html":{}}}],["category/category.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["category_title",{"_index":345,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"injectables/ProductService.html":{}}}],["categorycontroller",{"_index":208,"title":{"controllers/CategoryController.html":{}},"body":{"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"coverage.html":{}}}],["categorymodule",{"_index":58,"title":{"modules/CategoryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules.html":{},"overview.html":{}}}],["categoryservice",{"_index":238,"title":{"injectables/CategoryService.html":{}},"body":{"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"coverage.html":{},"overview.html":{}}}],["character",{"_index":413,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["character'})@apiproperty({description",{"_index":407,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["characters",{"_index":402,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["check",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/TableService.html":{},"index.html":{}}}],["cheese",{"_index":352,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["class",{"_index":36,"title":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/FavoriteProductDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/OrderProducts.html":{},"classes/OrderProductsDto.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/FavoriteProductDto.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"classes/OrderProducts.html":{},"classes/OrderProductsDto.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":200,"title":{},"body":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/FavoriteProductDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/OrderProducts.html":{},"classes/OrderProductsDto.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["clone",{"_index":853,"title":{},"body":{"index.html":{}}}],["cloning",{"_index":851,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_categorymodule",{"_index":258,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_categorymodule_imports",{"_index":259,"title":{},"body":{"modules/CategoryModule.html":{}}}],["cluster_categorymodule_providers",{"_index":260,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":516,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_imports",{"_index":518,"title":{},"body":{"modules/OrderModule.html":{}}}],["cluster_ordermodule_providers",{"_index":517,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":565,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":566,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":567,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":614,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_imports",{"_index":615,"title":{},"body":{"modules/ProductModule.html":{}}}],["cluster_productmodule_providers",{"_index":616,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_tablemodule",{"_index":664,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_imports",{"_index":666,"title":{},"body":{"modules/TableModule.html":{}}}],["cluster_tablemodule_providers",{"_index":665,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":749,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":751,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":750,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["confirm_password",{"_index":380,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["confirmation",{"_index":381,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["connect",{"_index":551,"title":{},"body":{"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["const",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["containing",{"_index":325,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('category",{"_index":244,"title":{},"body":{"controllers/CategoryController.html":{}}}],["controller('order",{"_index":503,"title":{},"body":{"controllers/OrderController.html":{}}}],["controller('product",{"_index":607,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('table",{"_index":657,"title":{},"body":{"controllers/TableController.html":{}}}],["controller('user",{"_index":735,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":781,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":210,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":245,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["create(createorderdto",{"_index":481,"title":{},"body":{"controllers/OrderController.html":{}}}],["create(dto",{"_index":215,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createcategorydto",{"_index":216,"title":{"classes/CreateCategoryDto.html":{}},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["created_at",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"classes/Category.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["createmany",{"_index":553,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderdto",{"_index":309,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["createparamdecorator((_",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproductdto",{"_index":342,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["creates",{"_index":218,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductController.html":{}}}],["createtabledto",{"_index":372,"title":{"classes/CreateTableDto.html":{}},"body":{"classes/CreateTableDto.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":377,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["ctx",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["daniel",{"_index":416,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["data",{"_index":281,"title":{},"body":{"injectables/CategoryService.html":{},"classes/LoginResponseDto.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["date",{"_index":202,"title":{},"body":{"classes/Category.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{}}}],["deactivate",{"_index":486,"title":{},"body":{"controllers/OrderController.html":{}}}],["deactivateone",{"_index":479,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["deactivateone(@param('id",{"_index":512,"title":{},"body":{"controllers/OrderController.html":{}}}],["deactivateone(id",{"_index":484,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/FavoriteProductDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"classes/OrderProductsDto.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"classes/OrderProductsDto.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/ProductModule.html":{}}}],["defined",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/FavoriteProductDto.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderProducts.html":{},"classes/OrderProductsDto.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":254,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(':id')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":229,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductController.html":{}}}],["delete(':id')@useguards(undefined)@apibearerauth()@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":495,"title":{},"body":{"controllers/OrderController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(@param('id",{"_index":662,"title":{},"body":{"controllers/TableController.html":{}}}],["delete(id",{"_index":645,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{}}}],["deletes",{"_index":230,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["dependencies",{"_index":53,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":308,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/FavoriteProductDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/OrderProductsDto.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":858,"title":{},"body":{"index.html":{}}}],["disconnect",{"_index":773,"title":{},"body":{"injectables/UserService.html":{}}}],["docs",{"_index":83,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["documentation",{"_index":782,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":220,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto.active",{"_index":550,"title":{},"body":{"injectables/OrderService.html":{}}}],["dto.confirm_password",{"_index":775,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.id",{"_index":771,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.password",{"_index":774,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.products.map((product",{"_index":554,"title":{},"body":{"injectables/OrderService.html":{}}}],["dto.table_number",{"_index":552,"title":{},"body":{"injectables/OrderService.html":{}}}],["dto/create",{"_index":240,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/favorite",{"_index":730,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/login",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login.dto",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":602,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":868,"title":{},"body":{"index.html":{}}}],["each",{"_index":323,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["efficient",{"_index":840,"title":{},"body":{"index.html":{}}}],["email",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["enableshutdownhooks",{"_index":573,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":575,"title":{},"body":{"injectables/PrismaService.html":{}}}],["entities/category.entity",{"_index":242,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["entities/order",{"_index":548,"title":{},"body":{"injectables/OrderService.html":{}}}],["entities/order.entity",{"_index":499,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["entities/product.entity",{"_index":603,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["entities/table.entity",{"_index":653,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{}}}],["entities/user.entity",{"_index":731,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["environment",{"_index":850,"title":{},"body":{"index.html":{}}}],["equal",{"_index":778,"title":{},"body":{"injectables/UserService.html":{}}}],["error",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.message?.split('\\n",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.util",{"_index":280,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["error.util.ts",{"_index":802,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["errorlines",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errorlines[errorlines.length",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":296,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/FavoriteProductDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/OrderProductsDto.html":{}}}],["executing",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["executioncontext",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":450,"title":{},"body":{"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{}}}],["expiresin",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/FavoriteProductDto.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"classes/OrderProducts.html":{},"classes/OrderProductsDto.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":569,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["extends",{"_index":440,"title":{},"body":{"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":437,"title":{},"body":{"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":444,"title":{},"body":{"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["false",{"_index":446,"title":{},"body":{"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["favorite",{"_index":711,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["favorite(@param('userid",{"_index":741,"title":{},"body":{"controllers/UserController.html":{}}}],["favorite(id",{"_index":715,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["favorite_products",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["favoriteproductdto",{"_index":423,"title":{"classes/FavoriteProductDto.html":{}},"body":{"classes/FavoriteProductDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/FavoriteProductDto.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"classes/OrderProducts.html":{},"classes/OrderProductsDto.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findall",{"_index":211,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findallactive",{"_index":480,"title":{},"body":{"controllers/OrderController.html":{}}}],["findallactives",{"_index":537,"title":{},"body":{"injectables/OrderService.html":{}}}],["findbyid",{"_index":267,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{}}}],["findbyid(id",{"_index":271,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{}}}],["findone",{"_index":212,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":249,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":224,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["finds",{"_index":226,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductController.html":{}}}],["found",{"_index":289,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["framework",{"_index":838,"title":{},"body":{"index.html":{}}}],["function",{"_index":796,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":832,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":462,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["get(':id",{"_index":248,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["get(':id')@apioperation({summary",{"_index":225,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductController.html":{}}}],["get(':id')@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":492,"title":{},"body":{"controllers/OrderController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["get('active",{"_index":509,"title":{},"body":{"controllers/OrderController.html":{}}}],["get('active')@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":490,"title":{},"body":{"controllers/OrderController.html":{}}}],["get()@apioperation({summary",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/CategoryController.html":{},"controllers/ProductController.html":{}}}],["get()@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":488,"title":{},"body":{"controllers/OrderController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["get()@useguards(undefined)@apioperation({summary",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["getappstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getappstatus(@req",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["getappstatus(baseurl",{"_index":81,"title":{},"body":{"injectables/AppService.html":{}}}],["getappstatus(req",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":834,"title":{"index.html":{}},"body":{}}],["git",{"_index":852,"title":{},"body":{"index.html":{}}}],["grow",{"_index":875,"title":{},"body":{"index.html":{}}}],["handleerror",{"_index":278,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["here",{"_index":427,"title":{},"body":{"classes/FavoriteProductDto.html":{},"classes/OrderProductsDto.html":{},"index.html":{}}}],["httpcode",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":255,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.ok",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://github.com/darcanj0/steam",{"_index":854,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":891,"title":{},"body":{"index.html":{}}}],["https://t2.rg.ltmcdn.com/pt/posts/9/8/3/pizza_calabresa_e_mussarela_4389_600.jpg",{"_index":359,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["https://wallpaperaccess.com/full/6999296.jpg",{"_index":389,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["httpstatus",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["id",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateOrderDto.html":{},"classes/FavoriteProductDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id:number",{"_index":513,"title":{},"body":{"controllers/OrderController.html":{}}}],["identifier",{"_index":783,"title":{},"body":{"coverage.html":{}}}],["idparam",{"_index":728,"title":{},"body":{"controllers/UserController.html":{}}}],["ignoreexpiration",{"_index":445,"title":{},"body":{"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["illustration",{"_index":358,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["image",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["implements",{"_index":580,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/FavoriteProductDto.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"classes/OrderProductsDto.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["incorrect",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/FavoriteProductDto.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderProducts.html":{},"classes/OrderProductsDto.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":391,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["inestapplication",{"_index":576,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/FavoriteProductDto.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"classes/OrderProducts.html":{},"classes/OrderProductsDto.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["ingredients",{"_index":351,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["injectable",{"_index":78,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":79,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["insert",{"_index":426,"title":{},"body":{"classes/FavoriteProductDto.html":{},"classes/OrderProductsDto.html":{}}}],["installrunning",{"_index":857,"title":{},"body":{"index.html":{}}}],["is_admin",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["isboolean",{"_index":335,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{}}}],["isboolean()@apiproperty({description",{"_index":315,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{}}}],["isemail",{"_index":418,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isemail()@apiproperty({description",{"_index":384,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["ishashvalid",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["isint",{"_index":336,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/OrderProductsDto.html":{}}}],["isint()@ispositive()@apiproperty({description",{"_index":329,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/OrderProductsDto.html":{}}}],["isnotempty",{"_index":301,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/OrderProductsDto.html":{}}}],["isnumber",{"_index":367,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{}}}],["isnumber()@ispositive()@apiproperty({description",{"_index":375,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["isnumber({maxdecimalplaces",{"_index":361,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isoptional",{"_index":368,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["ispositive",{"_index":337,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"classes/OrderProductsDto.html":{}}}],["isstring",{"_index":302,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/OrderProductsDto.html":{}}}],["isstring()@apiproperty({description",{"_index":347,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":350,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/OrderProductsDto.html":{}}}],["isstring()@isnotempty()@minlength(3)@maxlength(20)@apiproperty({description",{"_index":295,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["isstring()@matches(/^(?=.*[a",{"_index":394,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isurl",{"_index":369,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isurl()@apiproperty({description",{"_index":357,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isuuid",{"_index":338,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/FavoriteProductDto.html":{}}}],["isuuid()@apiproperty({description",{"_index":425,"title":{},"body":{"classes/FavoriteProductDto.html":{}}}],["join",{"_index":882,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"dependencies.html":{}}}],["jwt.strategies",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtadmonlystrategy",{"_index":261,"title":{"injectables/JwtAdmOnlyStrategy.html":{}},"body":{"modules/CategoryModule.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["jwtfromrequest",{"_index":443,"title":{},"body":{"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{},"modules/ProductModule.html":{}}}],["jwtmodule.register",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":135,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"modules/OrderModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":888,"title":{},"body":{"index.html":{}}}],["lasterrorline",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":894,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":872,"title":{},"body":{"index.html":{}}}],["list",{"_index":321,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["lists",{"_index":221,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["literal",{"_index":433,"title":{},"body":{"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["local",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["locally",{"_index":848,"title":{},"body":{"index.html":{}}}],["logged",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["loggeduser",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["login(@body",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":94,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":118,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["lower",{"_index":403,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["lowercase",{"_index":408,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["made",{"_index":331,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["matches",{"_index":419,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^(?=.*[a",{"_index":420,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/FavoriteProductDto.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"classes/OrderProducts.html":{},"classes/OrderProductsDto.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxdecimalplaces",{"_index":370,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["maxlength",{"_index":303,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["maxlength(20",{"_index":307,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["message",{"_index":398,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":304,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["minlength(3",{"_index":306,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["miscellaneous",{"_index":831,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":871,"title":{},"body":{"index.html":{}}}],["mode",{"_index":862,"title":{},"body":{"index.html":{}}}],["module",{"_index":50,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":52,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":884,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":889,"title":{},"body":{"index.html":{}}}],["name",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["name@example.com",{"_index":386,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["nest",{"_index":844,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":893,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":806,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ProductModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/FavoriteProductDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"classes/OrderProductsDto.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["never",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":837,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":277,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["notfoundexception(`id",{"_index":287,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["npm",{"_index":856,"title":{},"body":{"index.html":{}}}],["null",{"_index":534,"title":{},"body":{"classes/OrderProductsDto.html":{}}}],["number",{"_index":204,"title":{},"body":{"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderProducts.html":{},"classes/OrderProductsDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"classes/Table.html":{},"injectables/TableService.html":{}}}],["numeric",{"_index":411,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["numeric\\none",{"_index":422,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["object",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["objects",{"_index":322,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["observation",{"_index":523,"title":{},"body":{"classes/OrderProducts.html":{},"classes/OrderProductsDto.html":{},"injectables/OrderService.html":{}}}],["occurred",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["one",{"_index":412,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/TableController.html":{}}}],["onmoduleinit",{"_index":574,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":873,"title":{},"body":{"index.html":{}}}],["operation",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderProducts.html":{},"classes/OrderProductsDto.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["order",{"_index":317,"title":{"classes/Order.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Table.html":{},"classes/User.html":{},"coverage.html":{}}}],["order.controller",{"_index":520,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.dto",{"_index":498,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["order.dto.ts",{"_index":311,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:19",{"_index":333,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:26",{"_index":318,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:35",{"_index":328,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.service",{"_index":501,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["order/order.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["ordercontroller",{"_index":477,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["ordered",{"_index":531,"title":{},"body":{"classes/OrderProductsDto.html":{}}}],["ordermodule",{"_index":59,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orderproducts",{"_index":471,"title":{"classes/OrderProducts.html":{}},"body":{"classes/Order.html":{},"classes/OrderProducts.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["orderproductsdto",{"_index":340,"title":{"classes/OrderProductsDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/OrderProductsDto.html":{},"coverage.html":{}}}],["orders",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"controllers/OrderController.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["orderselect",{"_index":536,"title":{},"body":{"injectables/OrderService.html":{}}}],["orderservice",{"_index":500,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["oregano",{"_index":354,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["out",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":898,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":804,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":236,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":611,"title":{},"body":{"controllers/ProductController.html":{}}}],["parameters",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["partial",{"_index":464,"title":{},"body":{"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Table.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["partialtype",{"_index":689,"title":{},"body":{"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createproductdto",{"_index":690,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["partialtype(createtabledto",{"_index":692,"title":{},"body":{"classes/UpdateTableDto.html":{}}}],["partialtype(createuserdto",{"_index":696,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":439,"title":{},"body":{"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["passportmodule.register",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["passportstrategy",{"_index":436,"title":{},"body":{"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":441,"title":{},"body":{"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["password",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["patch",{"_index":237,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":251,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":233,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductController.html":{}}}],["patch(':id')@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":485,"title":{},"body":{"controllers/OrderController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["patch('favorite/:userid",{"_index":740,"title":{},"body":{"controllers/UserController.html":{}}}],["patch('favorite/:userid')@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":716,"title":{},"body":{"controllers/UserController.html":{}}}],["patch('unfavorite/:userid",{"_index":743,"title":{},"body":{"controllers/UserController.html":{}}}],["patch('unfavorite/:userid')@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":723,"title":{},"body":{"controllers/UserController.html":{}}}],["payload",{"_index":435,"title":{},"body":{"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":448,"title":{},"body":{"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["pepper",{"_index":355,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["pepperoni",{"_index":353,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["photo",{"_index":388,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["pizza",{"_index":365,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["pizzas",{"_index":298,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{}}}],["please",{"_index":883,"title":{},"body":{"index.html":{}}}],["post",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["post()@apioperation({summary",{"_index":217,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["post()@httpcode(httpstatus.ok)@apioperation({summary",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":482,"title":{},"body":{"controllers/OrderController.html":{},"controllers/TableController.html":{}}}],["prefix",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["price",{"_index":346,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"injectables/ProductService.html":{}}}],["prisma",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["prisma.ordercreateinput",{"_index":549,"title":{},"body":{"injectables/OrderService.html":{}}}],["prisma.productcreateinput",{"_index":632,"title":{},"body":{"injectables/ProductService.html":{}}}],["prisma.service",{"_index":570,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma.userupdateinput",{"_index":770,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma/client",{"_index":547,"title":{},"body":{"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":572,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":60,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":159,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["process.env.jwt_secret",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["product",{"_index":324,"title":{"classes/Product.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/FavoriteProductDto.html":{},"classes/OrderProductsDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["product.controller",{"_index":618,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.dto",{"_index":601,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["product.dto.ts",{"_index":344,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/FavoriteProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:10",{"_index":428,"title":{},"body":{"classes/FavoriteProductDto.html":{}}}],["product.dto.ts:17",{"_index":366,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:25",{"_index":356,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:33",{"_index":364,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:41",{"_index":360,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:48",{"_index":349,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.observation",{"_index":557,"title":{},"body":{"injectables/OrderService.html":{}}}],["product.product_title",{"_index":555,"title":{},"body":{"injectables/OrderService.html":{}}}],["product.quantity",{"_index":556,"title":{},"body":{"injectables/OrderService.html":{}}}],["product.service",{"_index":605,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product/product.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["product_title",{"_index":524,"title":{},"body":{"classes/OrderProducts.html":{},"classes/OrderProductsDto.html":{},"injectables/OrderService.html":{}}}],["productcontroller",{"_index":593,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["production",{"_index":849,"title":{},"body":{"index.html":{}}}],["productmodule",{"_index":61,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["products",{"_index":312,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{}}}],["products.dto",{"_index":341,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["products.dto.ts",{"_index":529,"title":{},"body":{"classes/OrderProductsDto.html":{},"coverage.html":{}}}],["products.dto.ts:11",{"_index":532,"title":{},"body":{"classes/OrderProductsDto.html":{}}}],["products.dto.ts:19",{"_index":533,"title":{},"body":{"classes/OrderProductsDto.html":{}}}],["products.dto.ts:25",{"_index":530,"title":{},"body":{"classes/OrderProductsDto.html":{}}}],["products.entity",{"_index":476,"title":{},"body":{"classes/Order.html":{},"injectables/OrderService.html":{}}}],["products.entity.ts",{"_index":522,"title":{},"body":{"classes/OrderProducts.html":{},"coverage.html":{}}}],["products.entity.ts:2",{"_index":526,"title":{},"body":{"classes/OrderProducts.html":{}}}],["products.entity.ts:3",{"_index":527,"title":{},"body":{"classes/OrderProducts.html":{}}}],["products.entity.ts:4",{"_index":525,"title":{},"body":{"classes/OrderProducts.html":{}}}],["productselect",{"_index":620,"title":{},"body":{"injectables/ProductService.html":{}}}],["productservice",{"_index":604,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["profile",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{}}}],["profile(@loggeduser",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["progressive",{"_index":836,"title":{},"body":{"index.html":{}}}],["project",{"_index":874,"title":{},"body":{"index.html":{}}}],["project.gitinstallation",{"_index":855,"title":{},"body":{"index.html":{}}}],["promise",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":153,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/FavoriteProductDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/OrderProducts.html":{},"classes/OrderProductsDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providers",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["quantity",{"_index":326,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/OrderProducts.html":{},"classes/OrderProductsDto.html":{},"injectables/OrderService.html":{}}}],["query",{"_index":686,"title":{},"body":{"injectables/TableService.html":{}}}],["read",{"_index":493,"title":{},"body":{"controllers/OrderController.html":{},"index.html":{}}}],["readonly",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["real",{"_index":415,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["record",{"_index":285,"title":{},"body":{"injectables/CategoryService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":288,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["remove",{"_index":213,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@param('id",{"_index":256,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["remove(id",{"_index":228,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["repository",{"_index":847,"title":{},"body":{"index.html":{}}}],["represents",{"_index":316,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{}}}],["req",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["req.get('host",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["req.protocol",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response.dto",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["response.dto.ts",{"_index":458,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:14",{"_index":465,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.dto.ts:9",{"_index":463,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["results",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/FavoriteProductDto.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"classes/OrderProducts.html":{},"classes/OrderProductsDto.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":460,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["returning",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["returns",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":859,"title":{},"body":{"index.html":{}}}],["running",{"_index":85,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["rxjs",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":841,"title":{},"body":{"index.html":{}}}],["secret",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":447,"title":{},"body":{"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["select",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["sent",{"_index":777,"title":{},"body":{"injectables/UserService.html":{}}}],["server",{"_index":84,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["side",{"_index":842,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{}}}],["signs",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/FavoriteProductDto.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"classes/OrderProducts.html":{},"classes/OrderProductsDto.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["special",{"_index":406,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["sponsors",{"_index":877,"title":{},"body":{"index.html":{}}}],["src/.../handle",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logged",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":833,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:15",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":80,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":82,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:38",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:28",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login",{"_index":457,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":454,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:10",{"_index":455,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:18",{"_index":456,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/jwt.strategies",{"_index":263,"title":{},"body":{"modules/CategoryModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["src/auth/jwt.strategies.ts",{"_index":429,"title":{},"body":{"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategies.ts:16",{"_index":453,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategies.ts:29",{"_index":431,"title":{},"body":{"injectables/JwtAdmOnlyStrategy.html":{}}}],["src/auth/jwt.strategies.ts:38",{"_index":434,"title":{},"body":{"injectables/JwtAdmOnlyStrategy.html":{}}}],["src/auth/jwt.strategies.ts:7",{"_index":452,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/logged",{"_index":497,"title":{},"body":{"controllers/OrderController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/category/category.controller.ts",{"_index":209,"title":{},"body":{"controllers/CategoryController.html":{},"coverage.html":{}}}],["src/category/category.controller.ts:19",{"_index":219,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/category/category.controller.ts:27",{"_index":223,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/category/category.controller.ts:35",{"_index":227,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/category/category.controller.ts:43",{"_index":235,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/category/category.controller.ts:52",{"_index":231,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/category/category.module.ts",{"_index":262,"title":{},"body":{"modules/CategoryModule.html":{}}}],["src/category/category.service.ts",{"_index":266,"title":{},"body":{"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/category/category.service.ts:11",{"_index":269,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/category/category.service.ts:16",{"_index":270,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/category/category.service.ts:20",{"_index":272,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/category/category.service.ts:28",{"_index":273,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/category/category.service.ts:32",{"_index":276,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/category/category.service.ts:40",{"_index":274,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/category/category.service.ts:8",{"_index":268,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/category/dto/create",{"_index":293,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/category/entities/category.entity.ts",{"_index":201,"title":{},"body":{"classes/Category.html":{},"coverage.html":{}}}],["src/category/entities/category.entity.ts:2",{"_index":205,"title":{},"body":{"classes/Category.html":{}}}],["src/category/entities/category.entity.ts:3",{"_index":206,"title":{},"body":{"classes/Category.html":{}}}],["src/category/entities/category.entity.ts:4",{"_index":203,"title":{},"body":{"classes/Category.html":{}}}],["src/category/entities/category.entity.ts:5",{"_index":207,"title":{},"body":{"classes/Category.html":{}}}],["src/main.ts",{"_index":795,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/order/dto/create",{"_index":310,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["src/order/dto/order",{"_index":528,"title":{},"body":{"classes/OrderProductsDto.html":{},"coverage.html":{}}}],["src/order/entities/order",{"_index":521,"title":{},"body":{"classes/OrderProducts.html":{},"coverage.html":{}}}],["src/order/entities/order.entity",{"_index":641,"title":{},"body":{"classes/Table.html":{},"classes/User.html":{}}}],["src/order/entities/order.entity.ts",{"_index":466,"title":{},"body":{"classes/Order.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts:10",{"_index":472,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:11",{"_index":469,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:5",{"_index":470,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:6",{"_index":475,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:7",{"_index":473,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:8",{"_index":468,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:9",{"_index":474,"title":{},"body":{"classes/Order.html":{}}}],["src/order/order.controller.ts",{"_index":478,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/order/order.controller.ts:32",{"_index":483,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:43",{"_index":489,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:53",{"_index":491,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:63",{"_index":494,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:73",{"_index":487,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:84",{"_index":496,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.module.ts",{"_index":519,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/order/order.service.ts",{"_index":535,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/order/order.service.ts:10",{"_index":538,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:13",{"_index":546,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:24",{"_index":539,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:44",{"_index":541,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:54",{"_index":542,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:61",{"_index":543,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:72",{"_index":544,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:76",{"_index":540,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:81",{"_index":545,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/prisma/prisma.module",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":568,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":571,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":577,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":579,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/product/dto/create",{"_index":343,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/product/dto/update",{"_index":688,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/product/entities/product.entity",{"_index":708,"title":{},"body":{"classes/User.html":{}}}],["src/product/entities/product.entity.ts",{"_index":584,"title":{},"body":{"classes/Product.html":{},"coverage.html":{}}}],["src/product/entities/product.entity.ts:2",{"_index":588,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:3",{"_index":591,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:4",{"_index":587,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:5",{"_index":590,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:6",{"_index":589,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:7",{"_index":585,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:8",{"_index":586,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:9",{"_index":592,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.controller.ts",{"_index":594,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:31",{"_index":596,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:39",{"_index":597,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:47",{"_index":595,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:55",{"_index":600,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:67",{"_index":598,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module.ts",{"_index":617,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.service.ts",{"_index":619,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/product/product.service.ts:10",{"_index":621,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:13",{"_index":628,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:24",{"_index":623,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:28",{"_index":624,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:39",{"_index":625,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:43",{"_index":622,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:50",{"_index":627,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:58",{"_index":626,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/table/dto/create",{"_index":373,"title":{},"body":{"classes/CreateTableDto.html":{},"coverage.html":{}}}],["src/table/dto/update",{"_index":691,"title":{},"body":{"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["src/table/entities/table.entity.ts",{"_index":635,"title":{},"body":{"classes/Table.html":{},"coverage.html":{}}}],["src/table/entities/table.entity.ts:4",{"_index":637,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entity.ts:5",{"_index":638,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entity.ts:6",{"_index":639,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entity.ts:7",{"_index":636,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entity.ts:8",{"_index":640,"title":{},"body":{"classes/Table.html":{}}}],["src/table/table.controller.ts",{"_index":643,"title":{},"body":{"controllers/TableController.html":{},"coverage.html":{}}}],["src/table/table.controller.ts:31",{"_index":648,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:41",{"_index":649,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:51",{"_index":644,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:61",{"_index":651,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:72",{"_index":646,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.module.ts",{"_index":667,"title":{},"body":{"modules/TableModule.html":{}}}],["src/table/table.service.ts",{"_index":669,"title":{},"body":{"injectables/TableService.html":{},"coverage.html":{}}}],["src/table/table.service.ts:11",{"_index":680,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:21",{"_index":675,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:25",{"_index":679,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:38",{"_index":676,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:42",{"_index":673,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:49",{"_index":677,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:63",{"_index":674,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:9",{"_index":672,"title":{},"body":{"injectables/TableService.html":{}}}],["src/user/dto/create",{"_index":378,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/favorite",{"_index":424,"title":{},"body":{"classes/FavoriteProductDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":694,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{}}}],["src/user/entities/user.entity.ts",{"_index":697,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:10",{"_index":703,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:11",{"_index":704,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:12",{"_index":700,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:13",{"_index":698,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:14",{"_index":706,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:5",{"_index":701,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:6",{"_index":699,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":707,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:8",{"_index":705,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:9",{"_index":702,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":710,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:103",{"_index":721,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:34",{"_index":719,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:38",{"_index":727,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:50",{"_index":720,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:61",{"_index":717,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:71",{"_index":724,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:79",{"_index":714,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:89",{"_index":725,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.service.ts",{"_index":754,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:114",{"_index":761,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:16",{"_index":756,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:18",{"_index":766,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:31",{"_index":759,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:35",{"_index":765,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:46",{"_index":760,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:50",{"_index":758,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:64",{"_index":762,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:78",{"_index":757,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:89",{"_index":763,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/users.module.ts",{"_index":752,"title":{},"body":{"modules/UserModule.html":{}}}],["src/utils/handle",{"_index":279,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":860,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":863,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":864,"title":{},"body":{"index.html":{}}}],["started",{"_index":835,"title":{"index.html":{}},"body":{}}],["starter",{"_index":846,"title":{},"body":{"index.html":{}}}],["statements",{"_index":784,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateOrderDto.html":{}}}],["stay",{"_index":885,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":438,"title":{},"body":{"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["string",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/FavoriteProductDto.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/OrderProducts.html":{},"classes/OrderProductsDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["summary",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"classes/CreateProductDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["super",{"_index":442,"title":{},"body":{"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["support",{"_index":878,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":896,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":828,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["sweet",{"_index":297,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{}}}],["table",{"_index":330,"title":{"classes/Table.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"injectables/OrderService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"coverage.html":{}}}],["table.controller",{"_index":668,"title":{},"body":{"modules/TableModule.html":{}}}],["table.dto",{"_index":652,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{}}}],["table.dto.ts",{"_index":374,"title":{},"body":{"classes/CreateTableDto.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["table.dto.ts:11",{"_index":376,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["table.service",{"_index":655,"title":{},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{}}}],["table/table.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["table_number",{"_index":313,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/Order.html":{},"injectables/OrderService.html":{}}}],["tablecontroller",{"_index":642,"title":{"controllers/TableController.html":{}},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{},"coverage.html":{}}}],["tablemodule",{"_index":62,"title":{"modules/TableModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TableModule.html":{},"modules.html":{},"overview.html":{}}}],["tables",{"_index":647,"title":{},"body":{"controllers/TableController.html":{}}}],["tableselect",{"_index":670,"title":{},"body":{"injectables/TableService.html":{}}}],["tableservice",{"_index":654,"title":{"injectables/TableService.html":{}},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"coverage.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":867,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":870,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":869,"title":{},"body":{"index.html":{}}}],["tests",{"_index":866,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":876,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":581,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":582,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getappstatus(baseurl",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.categoryservice.create(dto",{"_index":246,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.findall",{"_index":247,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.findone(+id",{"_index":250,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.remove(+id",{"_index":257,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.update(+id",{"_index":253,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.findbyid(id",{"_index":290,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{}}}],["this.jwtservice.sign",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.orderselect",{"_index":559,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderservice.create(createorderdto",{"_index":506,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.deactivateone(+id",{"_index":514,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findall",{"_index":508,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findallactives",{"_index":510,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findone(+id",{"_index":511,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.remove(+id",{"_index":515,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.prisma.category",{"_index":291,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.prisma.category.create",{"_index":282,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.prisma.category.delete",{"_index":292,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.prisma.category.findmany",{"_index":284,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.prisma.category.findunique",{"_index":286,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.prisma.order",{"_index":558,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.delete",{"_index":564,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findmany",{"_index":560,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findunique",{"_index":562,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.update",{"_index":563,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.product",{"_index":633,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.delete",{"_index":634,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findmany",{"_index":629,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findunique",{"_index":631,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.table",{"_index":685,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.delete",{"_index":687,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.findmany",{"_index":681,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.findunique",{"_index":683,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.user",{"_index":772,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.delete",{"_index":780,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":768,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.productselect",{"_index":630,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productservice.create(dto",{"_index":610,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findall",{"_index":608,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findone(id",{"_index":609,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.remove(id",{"_index":613,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.update(id",{"_index":612,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.tableselect",{"_index":682,"title":{},"body":{"injectables/TableService.html":{}}}],["this.tableservice.create(dto",{"_index":660,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.delete(id",{"_index":663,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.findall",{"_index":658,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.findone(id",{"_index":659,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.update(id",{"_index":661,"title":{},"body":{"controllers/TableController.html":{}}}],["this.userselect",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.userservice.create(dto",{"_index":746,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.favorite(id",{"_index":742,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":736,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":739,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.remove(id",{"_index":748,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.unfavorite(id",{"_index":745,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":747,"title":{},"body":{"controllers/UserController.html":{}}}],["this.verifyidandreturntable(id",{"_index":684,"title":{},"body":{"injectables/TableService.html":{}}}],["this.verifyidandreturnuser(id",{"_index":769,"title":{},"body":{"injectables/UserService.html":{}}}],["this.verifyselfoperation(id",{"_index":738,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/OrderProductsDto.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["token",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["touch",{"_index":886,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":334,"title":{},"body":{"classes/CreateOrderDto.html":{},"dependencies.html":{}}}],["true",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["true})@type(undefined)@apiproperty({description",{"_index":320,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["twitter",{"_index":892,"title":{},"body":{"index.html":{}}}],["type",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/FavoriteProductDto.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderProducts.html":{},"classes/OrderProductsDto.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["types",{"_index":809,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":845,"title":{},"body":{"index.html":{}}}],["ui",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":451,"title":{},"body":{"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{}}}],["unauthorizedexception",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{}}}],["unauthorizedexception('user",{"_index":737,"title":{},"body":{"controllers/UserController.html":{}}}],["unauthorizedexception(`user",{"_index":449,"title":{},"body":{"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":327,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/OrderProductsDto.html":{}}}],["unfavorite",{"_index":712,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["unfavorite(@param('userid",{"_index":744,"title":{},"body":{"controllers/UserController.html":{}}}],["unfavorite(id",{"_index":722,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["unique",{"_index":385,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["unit",{"_index":865,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":275,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{}}}],["unlicensed",{"_index":904,"title":{},"body":{"properties.html":{}}}],["unprocessableentityexception",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["update",{"_index":214,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@param('id",{"_index":252,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["update(id",{"_index":232,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updated_at",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"classes/Category.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["updateproductdto",{"_index":599,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updates",{"_index":234,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["updatetabledto",{"_index":650,"title":{"classes/UpdateTableDto.html":{}},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":693,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["upper",{"_index":405,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["uppercase",{"_index":410,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["use",{"_index":400,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["useguards",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"controllers/ProductController.html":{}}}],["useguards(authguard('admin",{"_index":507,"title":{},"body":{"controllers/OrderController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard('jwt",{"_index":504,"title":{},"body":{"controllers/OrderController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":97,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user'})@apibearerauth",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.controller",{"_index":753,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator.dto",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["user.decorator.dto.ts",{"_index":789,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":695,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":379,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:17",{"_index":387,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:25",{"_index":417,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:36",{"_index":414,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:43",{"_index":383,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:50",{"_index":390,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:58",{"_index":393,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.id",{"_index":505,"title":{},"body":{"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["user.is_admin",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{}}}],["user.password",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user.service",{"_index":733,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/users.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["user_id",{"_index":467,"title":{},"body":{"classes/Order.html":{}}}],["user_name",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/OrderService.html":{},"injectables/TableService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["usercontroller",{"_index":709,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":63,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":718,"title":{},"body":{"controllers/UserController.html":{}}}],["userselect",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":732,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":430,"title":{},"body":{"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":432,"title":{},"body":{"injectables/JwtAdmOnlyStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["validatenested",{"_index":339,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validatenested({each",{"_index":319,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validator",{"_index":305,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/FavoriteProductDto.html":{},"classes/LoginDto.html":{},"classes/OrderProductsDto.html":{},"dependencies.html":{}}}],["value",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":790,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":905,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifyidandreturntable",{"_index":671,"title":{},"body":{"injectables/TableService.html":{}}}],["verifyidandreturntable(id",{"_index":678,"title":{},"body":{"injectables/TableService.html":{}}}],["verifyidandreturnuser",{"_index":755,"title":{},"body":{"injectables/UserService.html":{}}}],["verifyidandreturnuser(id",{"_index":764,"title":{},"body":{"injectables/UserService.html":{}}}],["verifyselfoperation",{"_index":713,"title":{},"body":{"controllers/UserController.html":{}}}],["verifyselfoperation(idparam",{"_index":726,"title":{},"body":{"controllers/UserController.html":{}}}],["version",{"_index":902,"title":{},"body":{"properties.html":{}}}],["void",{"_index":729,"title":{},"body":{"controllers/UserController.html":{}}}],["watch",{"_index":861,"title":{},"body":{"index.html":{}}}],["weak",{"_index":399,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["website",{"_index":890,"title":{},"body":{"index.html":{}}}],["wether",{"_index":392,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["you'd",{"_index":881,"title":{},"body":{"index.html":{}}}],["z])(?=.*[0",{"_index":396,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":395,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Check application status'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { Request } from 'express';\nimport { AppService } from './app.service';\n\n@ApiTags('status')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Check application status',\n  })\n  getAppStatus(@Req() req: Request) {\n    const baseURL: string = req.protocol + '://' + req.get('host');\n    return this.appService.getAppStatus(baseURL);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoryModule\n\nCategoryModule\n\nAppModule -->\n\nCategoryModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nTableModule\n\nTableModule\n\nAppModule -->\n\nTableModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CategoryModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            TableModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TableModule } from './table/table.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { ProductModule } from './product/product.module';\nimport { UserModule } from './user/users.module';\nimport { OrderModule } from './order/order.module';\nimport { CategoryModule } from './category/category.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [TableModule, ProductModule, UserModule, PrismaModule, OrderModule, CategoryModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(baseURL: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseURL\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: string; docs: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getAppStatus(baseURL: string) {\n    return { status: 'Server is running ✌', docs: baseURL + '/api' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Signs in an user, returning a token'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiOperation({summary: 'Returns the authenticated user'})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\nimport { AuthService } from './auth.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { LoggedUser } from './logged-user.decorator.dto';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Signs in an user, returning a token',\n  })\n  login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto);\n  }\n\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiOperation({\n    summary: 'Returns the authenticated user',\n  })\n  @ApiBearerAuth()\n  profile(@LoggedUser() user: User) {\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './jwt.strategies';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '24h' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: true,\n    email: true,\n    user_name: true,\n    password: true,\n    image: true,\n    is_admin: true,\n    orders: { select: { id: true, active: true } },\n    favorite_products: { select: { id: true, title: true } },\n    created_at: true,\n    updated_at: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport * as bcrypt from 'bcryptjs';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  private userSelect = {\n    id: true,\n    email: true,\n    user_name: true,\n    password: true,\n    image: true,\n    is_admin: true,\n    orders: { select: { id: true, active: true } },\n    favorite_products: { select: { id: true, title: true } },\n    created_at: true,\n    updated_at: true,\n  };\n\n  async login(loginDto: LoginDto): Promise {\n    const { email, password } = loginDto;\n    const user = await this.prisma.user.findUnique({\n      where: { email },\n      select: this.userSelect,\n    });\n    if (!user) {\n      throw new UnauthorizedException(\n        'User email and/or password are incorrect',\n      );\n    }\n    const isHashValid = await bcrypt.compare(password, user.password);\n    if (!isHashValid) {\n      throw new UnauthorizedException(\n        'User email and/or password are incorrect',\n      );\n    }\n    delete user.password;\n    return { user, token: this.jwtService.sign({ email, is_admin: user.is_admin }) };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/category/entities/category.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                created_at\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/category/entities/category.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/category/entities/category.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/category/entities/category.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/category/entities/category.entity.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Category {\n  id?: number;\n  title: string;\n  created_at?: Date;\n  updated_at?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoryController.html":{"url":"controllers/CategoryController.html","title":"controller - CategoryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/category/category.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                category\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Creates a new category'})\n                \n            \n\n            \n                \n                    Defined in src/category/category.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Lists all categories'})\n                \n            \n\n            \n                \n                    Defined in src/category/category.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Finds a category by id'})\n                \n            \n\n            \n                \n                    Defined in src/category/category.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Deletes a category by id'})\n                \n            \n\n            \n                \n                    Defined in src/category/category.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Updates a category by id'})\n                \n            \n\n            \n                \n                    Defined in src/category/category.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, HttpStatus, Param, Patch, Post, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { CategoryService } from './category.service';\nimport { CreateCategoryDto } from './dto/create-category.dto';\nimport { Category } from './entities/category.entity';\n\n@UseGuards(AuthGuard())\n@ApiTags('category')\n@ApiBearerAuth()\n@Controller('category')\nexport class CategoryController {\n  constructor(private readonly categoryService: CategoryService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Creates a new category'\n  })\n  create(@Body() dto: CreateCategoryDto): Promise {\n    return this.categoryService.create(dto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Lists all categories'\n  })\n  findAll(): Promise {\n    return this.categoryService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Finds a category by id'\n  })\n  findOne(@Param('id') id: string): Promise {\n    return this.categoryService.findOne(+id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Updates a category by id'\n  })\n  update(@Param('id') id: string, @Body() dto: CreateCategoryDto): Promise {\n    return this.categoryService.update(+id, dto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Deletes a category by id'\n  })\n  remove(@Param('id') id: string) {\n    return this.categoryService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoryModule.html":{"url":"modules/CategoryModule.html","title":"module - CategoryModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_imports\n\n\n\ncluster_CategoryModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nCategoryModule\n\nCategoryModule\n\nCategoryModule -->\n\nPrismaModule->CategoryModule\n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\nJwtAdmOnlyStrategy\n\nJwtAdmOnlyStrategy\n\nCategoryModule -->\n\nJwtAdmOnlyStrategy->CategoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/category/category.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoryService\n                        \n                        \n                            JwtAdmOnlyStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoryController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtAdmOnlyStrategy } from 'src/auth/jwt.strategies';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { CategoryController } from './category.controller';\nimport { CategoryService } from './category.service';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'admin' }),\n  ],\n  controllers: [CategoryController],\n  providers: [CategoryService, JwtAdmOnlyStrategy],\n})\nexport class CategoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/category/category.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/category/category.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateCategoryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/category/category.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/category/category.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/category/category.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/category/category.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/category/category.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, dto: CreateCategoryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/category/category.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateCategoryDto } from './dto/create-category.dto';\nimport { Category } from './entities/category.entity';\n\n@Injectable()\nexport class CategoryService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  create(dto: CreateCategoryDto): Promise {\n    const data = { ...dto };\n    return this.prisma.category.create({ data }).catch(handleError);\n  }\n\n  findAll(): Promise {\n    return this.prisma.category.findMany();\n  }\n\n  async findById(id: number): Promise {\n    const record = await this.prisma.category.findUnique({ where: { id } });\n    if (!record) {\n      throw new NotFoundException(`Id ${id} register was not found`);\n    }\n    return record;\n  }\n\n  findOne(id: number): Promise {\n    return this.findById(id);\n  }\n\n  async update(id: number, dto: CreateCategoryDto): Promise {\n    await this.findById(id);\n    const data = { ...dto };\n    return this.prisma.category\n      .update({ where: { id }, data })\n      .catch(handleError);\n  }\n\n  async remove(id: number) {\n    await this.findById(id);\n    return this.prisma.category.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/category/dto/create-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3)@MaxLength(20)@ApiProperty({description: 'Name of the category', example: 'Sweet pizzas'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/category/dto/create-category.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString, MaxLength, MinLength } from 'class-validator';\n\nexport class CreateCategoryDto {\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(3)\n  @MaxLength(20)\n  @ApiProperty({\n    description: 'Name of the category',\n    example: 'Sweet pizzas',\n  })\n  title: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                products\n                            \n                            \n                                table_number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@ApiProperty({description: 'Boolean that represents the status of the order', example: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     object[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)@ApiProperty({description: 'List of objects with each product from the order, containing their ID and quantity.', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        table_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()@ApiProperty({description: 'Number from the table that made the order', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsBoolean,\n  IsInt,\n  IsPositive,\n  IsUUID,\n  ValidateNested,\n} from 'class-validator';\nimport { OrderProductsDto } from './order-products.dto';\n\nexport class CreateOrderDto {\n  @IsInt()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Number from the table that made the order',\n    example: 1,\n  })\n  table_number: number;\n\n  @IsBoolean()\n  @ApiProperty({\n    description: 'Boolean that represents the status of the order',\n    example: true,\n  })\n  active: boolean;\n\n  @ValidateNested({ each: true })\n  @Type(() => OrderProductsDto)\n  @ApiProperty({\n    description:\n      'List of objects with each product from the order, containing their ID and quantity.',\n    type: [OrderProductsDto],\n  })\n  products: object[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category_title\n                            \n                            \n                                description\n                            \n                            \n                                image\n                            \n                            \n                                price\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category_title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Title of the category from which the product belongs to', example: 'Sweet pizzas'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'product description (can be a summary or the ingredients)', example: 'cheese, pepperoni, oregano, pepper'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'product illustration', example: 'https://t2.rg.ltmcdn.com/pt/posts/9/8/3/pizza_calabresa_e_mussarela_4389_600.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@IsNotEmpty()@ApiProperty({description: 'product price', example: 21.99})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'name of the product', example: 'Pepperoni pizza'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n  IsUrl,\n} from 'class-validator';\n\nexport class CreateProductDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'name of the product',\n    example: 'Pepperoni pizza',\n  })\n  title: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'product description (can be a summary or the ingredients)',\n    example: 'cheese, pepperoni, oregano, pepper',\n  })\n  description: string;\n\n  @IsNumber({ maxDecimalPlaces: 2 })\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'product price',\n    example: 21.99,\n  })\n  price: number;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'product illustration',\n    example:\n      'https://t2.rg.ltmcdn.com/pt/posts/9/8/3/pizza_calabresa_e_mussarela_4389_600.jpg',\n  })\n  image: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Title of the category from which the product belongs to',\n    example: 'Sweet pizzas',\n  })\n  category_title: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTableDto.html":{"url":"classes/CreateTableDto.html","title":"class - CreateTableDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTableDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/dto/create-table.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsPositive()@ApiProperty({description: 'Represents the table number', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/dto/create-table.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsPositive } from 'class-validator';\n\nexport class CreateTableDto {\n  @IsNumber()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Represents the table number',\n    example: 1,\n  })\n  number: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirm_password\n                            \n                            \n                                email\n                            \n                            \n                                image\n                            \n                            \n                                is_admin\n                            \n                            \n                                password\n                            \n                            \n                                user_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirm_password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'password confirmation', example: 'Abcdef@1'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({description: 'user email (must be unique)', example: 'name@example.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'a photo for the user profile', example: 'https://wallpaperaccess.com/full/6999296.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_admin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@ApiProperty({description: 'Boolean that indicates wether the user will be an admin or not', example: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/, {message: 'Your password is too weak. Use 8 characters at least, 1 lower case, 1 upper case, a number and a special character'})@ApiProperty({description: At least 1 lowercase alphabetical\nat least 1 uppercase alphabetical\nat least 1 numeric\none special character, example: 'Abcdef@1'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'real name of the user', example: 'Daniel'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  IsUrl,\n  Matches,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsEmail()\n  @ApiProperty({\n    description: 'user email (must be unique)',\n    example: 'name@example.com',\n  })\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'real name of the user',\n    example: 'Daniel',\n  })\n  user_name: string;\n\n  @IsString()\n  @Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/, {\n    message:\n      'Your password is too weak. Use 8 characters at least, 1 lower case, 1 upper case, a number and a special character',\n  })\n  @ApiProperty({\n    description: `At least 1 lowercase alphabetical\\nat least 1 uppercase alphabetical\\nat least 1 numeric\\none special character`,\n    example: 'Abcdef@1',\n  })\n  password: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'password confirmation',\n    example: 'Abcdef@1',\n  })\n  confirm_password: string;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'a photo for the user profile',\n    example: 'https://wallpaperaccess.com/full/6999296.jpg',\n  })\n  image: string;\n\n  @IsBoolean()\n  @ApiProperty({\n    description:\n      'Boolean that indicates wether the user will be an admin or not',\n    example: true,\n  })\n  is_admin: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FavoriteProductDto.html":{"url":"classes/FavoriteProductDto.html","title":"class - FavoriteProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FavoriteProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/favorite-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@ApiProperty({description: 'Id of the product', example: 'Insert here the product ID'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/favorite-product.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsUUID } from 'class-validator';\n\nexport class FavoriteProductDto {\n  @IsUUID()\n  @ApiProperty({\n    description: 'Id of the product',\n    example: 'Insert here the product ID',\n  })\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAdmOnlyStrategy.html":{"url":"injectables/JwtAdmOnlyStrategy.html","title":"injectable - JwtAdmOnlyStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAdmOnlyStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategies.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategies.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategies.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { email: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: { email: payload.email },\n    });\n    if (!user) {\n      throw new UnauthorizedException(`User does not exist or is unauthorized`);\n    }\n    delete user.password;\n    return user;\n  }\n}\n\n@Injectable()\nexport class JwtAdmOnlyStrategy extends PassportStrategy(Strategy, 'admin') {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { email: string; is_admin: boolean }) {\n    const user = await this.prisma.user.findUnique({\n      where: { email: payload.email },\n    });\n    if (!user || !user.is_admin) {\n      throw new UnauthorizedException(`User does not exist or is unauthorized`);\n    }\n    delete user.password;\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategies.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategies.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategies.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { email: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: { email: payload.email },\n    });\n    if (!user) {\n      throw new UnauthorizedException(`User does not exist or is unauthorized`);\n    }\n    delete user.password;\n    return user;\n  }\n}\n\n@Injectable()\nexport class JwtAdmOnlyStrategy extends PassportStrategy(Strategy, 'admin') {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { email: string; is_admin: boolean }) {\n    const user = await this.prisma.user.findUnique({\n      where: { email: payload.email },\n    });\n    if (!user || !user.is_admin) {\n      throw new UnauthorizedException(`User does not exist or is unauthorized`);\n    }\n    delete user.password;\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({description: 'User email', example: 'name@example.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'User password', example: 'Abcdef@1'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @IsEmail()\n  @ApiProperty({\n    description: 'User email',\n    example: 'name@example.com',\n  })\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'User password',\n    example: 'Abcdef@1',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT returned by login', example: 'Automatically generated JWT'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Data from the authenticated user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\n\nexport class LoginResponseDto {\n  @ApiProperty({\n    description: 'JWT returned by login',\n    example: 'Automatically generated JWT',\n  })\n  token: string;\n\n  @ApiProperty({\n    description: 'Data from the authenticated user',\n  })\n  user: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/entities/order.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                    Optional\n                                created_at\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                products\n                            \n                            \n                                table_number\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                    Optional\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OrderProducts[]\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        table_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from \"src/user/entities/user.entity\";\nimport { OrderProducts } from \"./order-products.entity\";\n\nexport class Order {\n    id?: number;\n    user_id?: string;\n    table_number: number;\n    active: boolean;\n    user?: Partial\n    products?: OrderProducts[]\n    created_at?: Date; \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                order\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                deactivateOne\n                            \n                            \n                                findAll\n                            \n                            \n                                findAllActive\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createOrderDto: CreateOrderDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Create a new order'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deactivateOne\n                        \n                    \n                \n            \n            \n                \ndeactivateOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Deactivate an active order'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'List all orders'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllActive\n                        \n                    \n                \n            \n            \n                \nfindAllActive()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('active')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'List all active orders'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Read an order by id'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(undefined)@ApiBearerAuth()@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Delete an order record by id'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { LoggedUser } from 'src/auth/logged-user.decorator.dto';\nimport { User } from 'src/user/entities/user.entity';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { Order } from './entities/order.entity';\nimport { OrderService } from './order.service';\n\n@ApiTags('order')\n@Controller('order')\nexport class OrderController {\n  constructor(private readonly orderService: OrderService) {}\n\n  @Post()\n  @UseGuards(AuthGuard('jwt'))\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Create a new order',\n  })\n  create(@Body() createOrderDto: CreateOrderDto, @LoggedUser() user: User): Promise {\n    const id = user.id;\n    return this.orderService.create(createOrderDto, id);\n  }\n\n  @Get()\n  @UseGuards(AuthGuard('admin'))\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'List all orders',\n  })\n  findAll(): Promise {\n    return this.orderService.findAll();\n  }\n\n  @Get('active')\n  @UseGuards(AuthGuard('admin'))\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'List all active orders',\n  })\n  findAllActive(): Promise {\n    return this.orderService.findAllActives();\n  }\n\n  @Get(':id')\n  @UseGuards(AuthGuard('jwt'))\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Read an order by id',\n  })\n  findOne(@Param('id') id: number): Promise {\n    return this.orderService.findOne(+id);\n  }\n\n  @Patch(':id')\n  @UseGuards(AuthGuard('jwt'))\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Deactivate an active order'\n  })\n  deactivateOne(@Param('id') id:number) {\n    return this.orderService.deactivateOne(+id)\n  }\n\n  @Delete(':id')\n  @UseGuards(AuthGuard('admin'))\n  @ApiBearerAuth()\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Delete an order record by id',\n  })\n  remove(@Param('id') id: number) {\n    return this.orderService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_OrderModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nJwtAdmOnlyStrategy\n\nJwtAdmOnlyStrategy\n\nOrderModule -->\n\nJwtAdmOnlyStrategy->OrderModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nOrderModule -->\n\nJwtStrategy->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtAdmOnlyStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            OrderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrderService } from './order.service';\nimport { OrderController } from './order.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtAdmOnlyStrategy, JwtStrategy } from 'src/auth/jwt.strategies';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({})],\n  controllers: [OrderController],\n  providers: [OrderService, JwtStrategy, JwtAdmOnlyStrategy],\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderProducts.html":{"url":"classes/OrderProducts.html","title":"class - OrderProducts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderProducts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/entities/order-products.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                observation\n                            \n                            \n                                product_title\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        observation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order-products.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        product_title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order-products.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order-products.entity.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class OrderProducts {\n  product_title: string;\n  quantity: number;\n  observation?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderProductsDto.html":{"url":"classes/OrderProductsDto.html","title":"class - OrderProductsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderProductsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/order-products.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                observation\n                            \n                            \n                                product_title\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        observation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Any observation to the product', default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/order-products.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        product_title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Title of the ordered product', example: 'Insert here the product title'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/order-products.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()@ApiProperty({description: 'Quantity of the product ordered', example: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/order-products.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsNotEmpty, IsPositive, IsString } from 'class-validator';\n\nexport class OrderProductsDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Title of the ordered product',\n    example: 'Insert here the product title',\n  })\n  product_title: string;\n\n  @IsInt()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Quantity of the product ordered',\n    example: 2,\n  })\n  quantity: number;\n\n  @ApiProperty({\n    description: 'Any observation to the product',\n    default: null,\n  })\n  observation?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                orderSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                deactivateOne\n                            \n                            \n                                findAll\n                            \n                            \n                                findAllActives\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/order/order.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateOrderDto, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deactivateOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    deactivateOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllActives\n                        \n                    \n                \n            \n            \n                \nfindAllActives()\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        orderSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: true,\n    table_number: true,\n    active: true,\n    user: { select: { id: true, user_name: true } },\n    products: {\n      select: { product_title: true, quantity: true, observation: true },\n    },\n    created_at: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/order/order.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { OrderProducts } from './entities/order-products.entity';\nimport { Order } from './entities/order.entity';\n\n@Injectable()\nexport class OrderService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  private orderSelect = {\n    id: true,\n    table_number: true,\n    active: true,\n    user: { select: { id: true, user_name: true } },\n    products: {\n      select: { product_title: true, quantity: true, observation: true },\n    },\n    created_at: true,\n  };\n\n  create(dto: CreateOrderDto, id: string): Promise {\n    const data: Prisma.orderCreateInput = {\n      active: dto.active,\n      table: { connect: { number: dto.table_number } },\n      user: { connect: { id } },\n      products: {\n        createMany: {\n          data: dto.products.map((product: OrderProducts) => ({\n            product_title: product.product_title,\n            quantity: product.quantity,\n            observation: product.observation,\n          })),\n        },\n      },\n    };\n    return this.prisma.order\n      .create({ data, select: this.orderSelect })\n      .catch(handleError);\n  }\n\n  findAll(): Promise {\n    return this.prisma.order.findMany({\n      select: {\n        ...this.orderSelect,\n        _count: { select: { products: true } },\n        products: false,\n      },\n    });\n  }\n\n  findAllActives(): Promise {\n    return this.prisma.order.findMany({\n      where: { active: true },\n      select: this.orderSelect,\n    });\n  }\n\n  async findById(id: number): Promise {\n    const record = await this.prisma.order.findUnique({\n      where: { id },\n      select: this.orderSelect,\n    });\n    if (!record) {\n      throw new NotFoundException(`Id '${id}' register was not found.`);\n    }\n    return record;\n  }\n\n  findOne(id: number): Promise {\n    return this.findById(id);\n  }\n\n  async deactivateOne(id: number) {\n    await this.findById(id);\n    return this.prisma.order.update({ where: { id }, data: { active: false } });\n  }\n\n  async remove(id: number) {\n    await this.findById(id);\n    return this.prisma.order.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService]\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/entities/product.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                category_title\n                            \n                            \n                                    Optional\n                                created_at\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                price\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        category_title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Product {\n  id?: string;\n  title: string;\n  description: string;\n  price: number;\n  image: string;\n  category_title?: string;\n  created_at?: Date;\n  updated_at?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Creates a new product'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Finds all products'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Finds a product by id'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Deletes a product'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Updates a product'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { Product } from './entities/product.entity';\nimport { ProductService } from './product.service';\n\n@UseGuards(AuthGuard())\n@ApiTags('product')\n@ApiBearerAuth()\n@Controller('product')\nexport class ProductController {\n  constructor(private readonly productService: ProductService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Finds all products',\n  })\n  findAll(): Promise {\n    return this.productService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Finds a product by id',\n  })\n  findOne(@Param('id') id: string): Promise {\n    return this.productService.findOne(id);\n  }\n\n  @Post()\n  @ApiOperation({\n    summary: 'Creates a new product',\n  })\n  create(@Body() dto: CreateProductDto): Promise {\n    return this.productService.create(dto);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Updates a product',\n  })\n  update(\n    @Param('id') id: string,\n    @Body() dto: UpdateProductDto,\n  ): Promise {\n    return this.productService.update(id, dto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Deletes a product',\n  })\n  remove(@Param('id') id: string) {\n    return this.productService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_imports\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nJwtAdmOnlyStrategy\n\nJwtAdmOnlyStrategy\n\nProductModule -->\n\nJwtAdmOnlyStrategy->ProductModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtAdmOnlyStrategy\n                        \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtAdmOnlyStrategy } from 'src/auth/jwt.strategies';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { ProductController } from './product.controller';\nimport { ProductService } from './product.service';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'admin' }),\n  ],\n  controllers: [ProductController],\n  providers: [ProductService, JwtAdmOnlyStrategy],\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                productSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        productSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: true,\n    title: true,\n    price: true,\n    description: true,\n    image: true,\n    category_title: true,\n    created_at: true,\n    updated_at: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/product/product.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { Product } from './entities/product.entity';\n\n@Injectable()\nexport class ProductService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  private productSelect = {\n    id: true,\n    title: true,\n    price: true,\n    description: true,\n    image: true,\n    category_title: true,\n    created_at: true,\n    updated_at: true,\n  };\n\n  findAll(): Promise {\n    return this.prisma.product.findMany({ select: this.productSelect });\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.product.findUnique({\n      where: { id },\n      select: this.productSelect,\n    });\n    if (!record) {\n      throw new NotFoundException(`Id ${id} register was not found.`);\n    }\n    return record;\n  }\n\n  findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  create(dto: CreateProductDto): Promise {\n    const data: Prisma.productCreateInput = { ...dto };\n    return this.prisma.product\n      .create({ data, select: this.productSelect })\n      .catch(handleError);\n  }\n\n  async update(id: string, dto: UpdateProductDto): Promise {\n    await this.findById(id);\n    const data = { ...dto };\n    return this.prisma.product\n      .update({ where: { id }, data, select: this.productSelect })\n      .catch(handleError);\n  }\n\n  async remove(id: string) {\n    await this.findById(id);\n    await this.prisma.product.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Table.html":{"url":"classes/Table.html","title":"class - Table","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Table\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/entities/table.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                created_at\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                number\n                            \n                            \n                                    Optional\n                                orders\n                            \n                            \n                                    Optional\n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        orders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial[]\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Order } from \"src/order/entities/order.entity\";\n\nexport class Table {\n  id?: string;\n  number: number;\n  orders?: Partial[] \n  created_at?: Date;\n  updated_at?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TableController.html":{"url":"controllers/TableController.html","title":"controller - TableController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TableController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                table\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateTableDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Create one table'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(undefined)@ApiBearerAuth()@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Delete one table by its id'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'List all tables'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'List one table by its id'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateTableDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Update one table by its id'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { CreateTableDto } from './dto/create-table.dto';\nimport { UpdateTableDto } from './dto/update-table.dto';\nimport { Table } from './entities/table.entity';\nimport { TableService } from './table.service';\n\n@ApiTags('table')\n@Controller('table')\nexport class TableController {\n  constructor(private tableService: TableService) {}\n\n  @Get()\n  @UseGuards(AuthGuard('admin'))\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'List all tables',\n  })\n  findAll(): Promise {\n    return this.tableService.findAll();\n  }\n\n  @Get(':id')\n  @UseGuards(AuthGuard('jwt'))\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'List one table by its id',\n  })\n  findOne(@Param('id') id: string): Promise {\n    return this.tableService.findOne(id);\n  }\n\n  @Post()\n  @UseGuards(AuthGuard('admin'))\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Create one table',\n  })\n  create(@Body() dto: CreateTableDto): Promise {\n    return this.tableService.create(dto);\n  }\n\n  @Patch(':id')\n  @UseGuards(AuthGuard('admin'))\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Update one table by its id',\n  })\n  update(@Param('id') id: string, @Body() dto: UpdateTableDto): Promise {\n    return this.tableService.update(id, dto);\n  }\n\n  @Delete(':id')\n  @UseGuards(AuthGuard('admin'))\n  @ApiBearerAuth()\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Delete one table by its id',\n  })\n  delete(@Param('id') id: string) {\n    return this.tableService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableModule.html":{"url":"modules/TableModule.html","title":"module - TableModule","body":"\n                   \n\n\n\n\n    Modules\n    TableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TableModule\n\n\n\ncluster_TableModule_providers\n\n\n\ncluster_TableModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nPrismaModule->TableModule\n\n\n\n\n\nJwtAdmOnlyStrategy\n\nJwtAdmOnlyStrategy\n\nTableModule -->\n\nJwtAdmOnlyStrategy->TableModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nTableModule -->\n\nJwtStrategy->TableModule\n\n\n\n\n\nTableService\n\nTableService\n\nTableModule -->\n\nTableService->TableModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/table/table.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtAdmOnlyStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            TableService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TableController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtAdmOnlyStrategy, JwtStrategy } from 'src/auth/jwt.strategies';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { TableController } from './table.controller';\nimport { TableService } from './table.service';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({})],\n  controllers: [TableController],\n  providers: [TableService, JwtStrategy, JwtAdmOnlyStrategy],\n})\nexport class TableModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TableService.html":{"url":"injectables/TableService.html","title":"injectable - TableService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TableService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                tableSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                verifyIdAndReturnTable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/table/table.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateTableDto)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateTableDto)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyIdAndReturnTable\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyIdAndReturnTable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tableSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: true,\n    number: true,\n    orders: {\n      select: { id: true, user: { select: { id: true, user_name: true } } },\n    },\n    created_at: true,\n    updated_at: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/table/table.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateTableDto } from './dto/create-table.dto';\nimport { UpdateTableDto } from './dto/update-table.dto';\nimport { Table } from './entities/table.entity';\n\n@Injectable()\nexport class TableService {\n  constructor(private readonly prisma: PrismaService) {}\n  private tableSelect = {\n    id: true,\n    number: true,\n    orders: {\n      select: { id: true, user: { select: { id: true, user_name: true } } },\n    },\n    created_at: true,\n    updated_at: true,\n  };\n\n  findAll(): Promise {\n    return this.prisma.table.findMany({ select: this.tableSelect });\n  }\n\n  async verifyIdAndReturnTable(id: string): Promise {\n    const record = await this.prisma.table.findUnique({\n      where: { id },\n      select: this.tableSelect,\n    });\n\n    if (!record) {\n      throw new NotFoundException(`Id '${id}' register was not found.`);\n    }\n\n    return record;\n  }\n\n  findOne(id: string): Promise {\n    return this.verifyIdAndReturnTable(id);\n  }\n\n  create(dto: CreateTableDto): Promise {\n    const data: Table = { ...dto };\n    return this.prisma.table\n      .create({ data, select: this.tableSelect })\n      .catch(handleError);\n  }\n\n  async update(id: string, dto: UpdateTableDto): Promise {\n    //check id with query\n    await this.verifyIdAndReturnTable(id);\n\n    const data: UpdateTableDto = { ...dto };\n    return this.prisma.table\n      .update({\n        where: { id },\n        data,\n        select: this.tableSelect,\n      })\n      .catch(handleError);\n  }\n\n  async delete(id: string) {\n    await this.verifyIdAndReturnTable(id);\n    await this.prisma.table.delete({\n      where: { id },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/update-product.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTableDto.html":{"url":"classes/UpdateTableDto.html","title":"class - UpdateTableDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTableDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/dto/update-table.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateTableDto } from './create-table.dto';\n\nexport class UpdateTableDto extends PartialType(CreateTableDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                created_at\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                favorite_products\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                is_admin\n                            \n                            \n                                    Optional\n                                orders\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                updated_at\n                            \n                            \n                                user_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        favorite_products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial[]\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_admin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        orders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial[]\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Order } from 'src/order/entities/order.entity';\nimport { Product } from 'src/product/entities/product.entity';\n\nexport class User {\n  id?: string;\n  email: string;\n  user_name: string;\n  password: string;\n  image: string;\n  is_admin: boolean;\n  orders?: Partial[];\n  favorite_products?: Partial[];\n  created_at?: Date;\n  updated_at?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                favorite\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                unfavorite\n                            \n                            \n                                update\n                            \n                            \n                                verifySelfOperation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new user'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        favorite\n                        \n                    \n                \n            \n            \n                \nfavorite(id: string, dto: FavoriteProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('favorite/:userId')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Favorite a product'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                FavoriteProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Lists all users'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'List a user by id'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(undefined)@ApiBearerAuth()@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Deletes a user by id'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unfavorite\n                        \n                    \n                \n            \n            \n                \nunfavorite(id: string, dto: FavoriteProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('unfavorite/:userId')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Unfavorite a product'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                FavoriteProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateUserDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Updates a user by id'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifySelfOperation\n                        \n                    \n                \n            \n            \n                \nverifySelfOperation(idParam: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idParam\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  UnauthorizedException,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { LoggedUser } from 'src/auth/logged-user.decorator.dto';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { FavoriteProductDto } from './dto/favorite-product.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport { UserService } from './user.service';\n\n@ApiTags('user')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Get()\n  @UseGuards(AuthGuard('admin'))\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Lists all users',\n  })\n  findAll(): Promise {\n    return this.userService.findAll();\n  }\n\n  verifySelfOperation(idParam: string, user: User) {\n    if (user.id != idParam && !user.is_admin) {\n      throw new UnauthorizedException('User does not exist or is unauthorized')\n    }\n  }\n\n  @Get(':id')\n  @UseGuards(AuthGuard('jwt'))\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'List a user by id',\n  })\n  findOne(@Param('id') id: string, @LoggedUser() user: User): Promise {\n    this.verifySelfOperation(id, user);\n    return this.userService.findOne(id);\n  }\n\n  @Patch('favorite/:userId')\n  @UseGuards(AuthGuard('jwt'))\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Favorite a product',\n  })\n  favorite(@Param('userId') id: string, @Body() dto: FavoriteProductDto): Promise {\n    return this.userService.favorite(id, dto);\n  }\n\n  @Patch('unfavorite/:userId')\n  @UseGuards(AuthGuard('jwt'))\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Unfavorite a product',\n  })\n  unfavorite(@Param('userId') id: string, @Body() dto: FavoriteProductDto): Promise {\n    return this.userService.unfavorite(id, dto);\n  }\n\n  @Post()\n  @ApiOperation({\n    summary: 'Create a new user',\n  })\n  create(@Body() dto: CreateUserDto): Promise {\n    return this.userService.create(dto);\n  }\n\n  @Patch(':id')\n  @UseGuards(AuthGuard('jwt'))\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Updates a user by id',\n  })\n  update(@Param('id') id: string, @Body() dto: UpdateUserDto, @LoggedUser() user: User): Promise {\n    if (user.id != id) {\n      throw new UnauthorizedException('User does not exist or is unauthorized');\n    }\n    return this.userService.update(id, dto);\n  }\n\n  @Delete(':id')\n  @UseGuards(AuthGuard('jwt'))\n  @ApiBearerAuth()\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Deletes a user by id',\n  })\n  remove(@Param('id') id: string, @LoggedUser() user: User) {\n    this.verifySelfOperation(id, user);\n    return this.userService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nJwtAdmOnlyStrategy\n\nJwtAdmOnlyStrategy\n\nUserModule -->\n\nJwtAdmOnlyStrategy->UserModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nUserModule -->\n\nJwtStrategy->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtAdmOnlyStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtAdmOnlyStrategy, JwtStrategy } from 'src/auth/jwt.strategies';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({})],\n  controllers: [UserController],\n  providers: [UserService, JwtStrategy, JwtAdmOnlyStrategy],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                favorite\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                unfavorite\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                verifyIdAndReturnUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        favorite\n                        \n                    \n                \n            \n            \n                \n                    \n                    favorite(id: string, dto: FavoriteProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                FavoriteProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        unfavorite\n                        \n                    \n                \n            \n            \n                \n                    \n                    unfavorite(id: string, dto: FavoriteProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                FavoriteProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyIdAndReturnUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyIdAndReturnUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: true,\n    email: true,\n    user_name: true,\n    password: false,\n    image: true,\n    is_admin: true,\n    orders: { select: { id: true, active: true } },\n    favorite_products: { select: { id: true, title: true } },\n    created_at: true,\n    updated_at: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport * as bcrypt from 'bcryptjs';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { FavoriteProductDto } from './dto/favorite-product.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\n\n@Injectable()\nexport class UserService {\n  constructor(private readonly prisma: PrismaService) {}\n  private userSelect = {\n    id: true,\n    email: true,\n    user_name: true,\n    password: false,\n    image: true,\n    is_admin: true,\n    orders: { select: { id: true, active: true } },\n    favorite_products: { select: { id: true, title: true } },\n    created_at: true,\n    updated_at: true,\n  };\n\n  findAll(): Promise {\n    return this.prisma.user.findMany({ select: this.userSelect });\n  }\n\n  async verifyIdAndReturnUser(id: string): Promise {\n    const record = await this.prisma.user.findUnique({\n      where: { id },\n      select: this.userSelect,\n    });\n    if (!record) {\n      throw new NotFoundException(`Id ${id} register was not found.`);\n    }\n    return record;\n  }\n\n  findOne(id: string): Promise {\n    return this.verifyIdAndReturnUser(id);\n  }\n\n  async favorite(id: string, dto: FavoriteProductDto): Promise {\n    await this.verifyIdAndReturnUser(id);\n    const data: Prisma.userUpdateInput = {\n      favorite_products: { connect: { id: dto.id } },\n    };\n    return this.prisma.user\n      .update({\n        where: { id },\n        data,\n        select: this.userSelect,\n      })\n      .catch(handleError);\n  }\n\n  async unfavorite(id: string, dto: FavoriteProductDto): Promise {\n    await this.verifyIdAndReturnUser(id);\n    const data: Prisma.userUpdateInput = {\n      favorite_products: { disconnect: { id: dto.id } },\n    };\n    return this.prisma.user\n      .update({\n        where: { id },\n        data,\n        select: this.userSelect,\n      })\n      .catch(handleError);\n  }\n\n  async create(dto: CreateUserDto): Promise {\n    if (dto.password != dto.confirm_password) {\n      throw new BadRequestException('Passwords sent are not equal.');\n    }\n    delete dto.confirm_password;\n    const data: User = { ...dto, password: await bcrypt.hash(dto.password, 8) };\n    return this.prisma.user\n      .create({ data, select: this.userSelect })\n      .catch(handleError);\n  }\n\n  async update(id: string, dto: UpdateUserDto): Promise {\n    await this.verifyIdAndReturnUser(id);\n\n    if (dto.password) {\n      if (dto.password != dto.confirm_password) {\n        throw new BadRequestException('Passwords sent are not equal.');\n      }\n    }\n\n    delete dto.confirm_password;\n\n    if (dto.password) {\n      dto = { ...dto, password: await bcrypt.hash(dto.password, 8) };\n    }\n\n    const data: Partial = { ...dto };\n    return this.prisma.user\n      .update({\n        where: { id },\n        data,\n        select: this.userSelect,\n      })\n      .catch(handleError);\n  }\n\n  async remove(id: string) {\n    await this.verifyIdAndReturnUser(id);\n    await this.prisma.user.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/dto/login-response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategies.ts\n            \n            injectable\n            JwtAdmOnlyStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategies.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/logged-user.decorator.dto.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/category/category.controller.ts\n            \n            controller\n            CategoryController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/category/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/category/dto/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/category/entities/category.entity.ts\n            \n            class\n            Category\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/dto/order-products.dto.ts\n            \n            class\n            OrderProductsDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/entities/order-products.entity.ts\n            \n            class\n            OrderProducts\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/entities/order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/order/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/order/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/product/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/dto/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/entities/product.entity.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/table/dto/create-table.dto.ts\n            \n            class\n            CreateTableDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/table/dto/update-table.dto.ts\n            \n            class\n            UpdateTableDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/table/entities/table.entity.ts\n            \n            class\n            Table\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/table/table.controller.ts\n            \n            controller\n            TableController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/table/table.service.ts\n            \n            injectable\n            TableService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/dto/favorite-product.dto.ts\n            \n            class\n            FavoriteProductDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/utils/handle-error.util.ts\n            \n            variable\n            handleError\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/mapped-types : ^1.0.1\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @prisma/client : ^3.15.2\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nCheck Swagger docs if you are running locally\nCheck production environment docs\nCloning\n$ git clone https://github.com/darcanj0/steam-project.gitInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_TableModule\n\n\n\ncluster_TableModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoryModule\n\nCategoryModule\n\nAppModule -->\n\nCategoryModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nCategoryModule -->\n\nPrismaModule->CategoryModule\n\n\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nPrismaModule->TableModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\nAppModule -->\n\nTableModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\nOrderModule -->\n\nJwtStrategy->OrderModule\n\n\n\nTableModule -->\n\nJwtStrategy->TableModule\n\n\n\nUserModule -->\n\nJwtStrategy->UserModule\n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\nJwtAdmOnlyStrategy\n\nJwtAdmOnlyStrategy\n\nCategoryModule -->\n\nJwtAdmOnlyStrategy->CategoryModule\n\n\n\nOrderModule -->\n\nJwtAdmOnlyStrategy->OrderModule\n\n\n\nProductModule -->\n\nJwtAdmOnlyStrategy->ProductModule\n\n\n\nTableModule -->\n\nJwtAdmOnlyStrategy->TableModule\n\n\n\nUserModule -->\n\nJwtAdmOnlyStrategy->UserModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nTableService\n\nTableService\n\nTableModule -->\n\nTableService->TableModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            handleError   (src/.../handle-error.util.ts)\n                        \n                        \n                            LoggedUser   (src/.../logged-user.decorator.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/handle-error.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): never => {\n    const errorLines = error.message?.split('\\n');\n    const lastErrorLine = errorLines[errorLines.length - 1]?.trim();\n    throw new UnprocessableEntityException(\n      lastErrorLine || 'An error occurred while executing the operation',\n    )\n}\n                    \n                \n\n\n        \n    \n\n    src/auth/logged-user.decorator.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user;\n  delete user.password;\n  return user;\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
