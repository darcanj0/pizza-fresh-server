//snake case is being used in prisma and in postgres

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model table {
  id     String  @id @default(uuid())
  number Int     @unique
  orders order[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model user {
  id                String    @id @default(uuid())
  email             String    @unique
  user_name         String
  password          String
  image             String
  orders            order[]
  favorite_products product[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model category {
  id         Int      @id @default(autoincrement())
  title      String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  products product[]
}

model product {
  id              String          @id @default(uuid())
  title           String          @unique
  description     String
  price           Float
  image           String
  category_title  String?
  category        category?       @relation(fields: [category_title], references: [title], onDelete: SetNull)
  order_product   order_product[]
  users_favorited user[]

  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model order {
  id           Int     @id @default(autoincrement())
  user_id      String?
  table_number Int?
  active       Boolean @default(true)

  user  user?  @relation(fields: [user_id], references: [id], onDelete: SetNull)
  table table? @relation(fields: [table_number], references: [number], onDelete: SetNull)

  products order_product[]

  created_at DateTime @default(now())
}

model order_product {
  id            String  @id @default(uuid())
  order_id      Int
  product_title String
  quantity      Int
  observation   String?

  order   order   @relation(fields: [order_id], references: [id], onDelete: Cascade)
  product product @relation(fields: [product_title], references: [title], onDelete: SetNull)
}
